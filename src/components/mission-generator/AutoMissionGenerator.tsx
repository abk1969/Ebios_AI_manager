/**
 * ü§ñ G√âN√âRATEUR AUTOMATIQUE DE MISSIONS EBIOS RM
 * Interface pour cr√©er des missions compl√®tes √† partir du contexte m√©tier
 */

import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Checkbox } from '@/components/ui/checkbox';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { AlertCircle, Zap, FileText, Download, CheckCircle, Edit3, Check, X } from 'lucide-react';
import { Alert, AlertDescription } from '@/components/ui/alert';
import AutoMissionGeneratorService, { MissionContext as ServiceMissionContext } from '@/services/ai/AutoMissionGeneratorService';

interface MissionContext {
  // Informations organisationnelles
  organizationName: string;
  sector: string;
  organizationSize: string;
  geographicScope: string;
  criticalityLevel: string;
  
  // Contexte technique
  siComponents: string[];
  mainTechnologies: string[];
  externalInterfaces: string[];
  sensitiveData: string[];
  
  // Processus m√©tier
  criticalProcesses: string[];
  stakeholders: string[];
  regulations: string[];
  financialStakes: string;
  
  // Contexte s√©curit√©
  securityMaturity: string;
  pastIncidents: string;
  regulatoryConstraints: string[];
  securityBudget: string;
  
  // Objectifs de la mission
  missionObjectives: string[];
  timeframe: string;
  specificRequirements: string;
}

interface GenerationProgress {
  step: string;
  progress: number;
  isComplete: boolean;
  missionId?: string;
  reports?: string[];
}

const AutoMissionGenerator: React.FC = () => {
  const [context, setContext] = useState<MissionContext>({
    organizationName: '',
    sector: '',
    organizationSize: '',
    geographicScope: '',
    criticalityLevel: '',
    siComponents: [],
    mainTechnologies: [],
    externalInterfaces: [],
    sensitiveData: [],
    criticalProcesses: [],
    stakeholders: [],
    regulations: [],
    financialStakes: '',
    securityMaturity: '',
    pastIncidents: '',
    regulatoryConstraints: [],
    securityBudget: '',
    missionObjectives: [],
    timeframe: '',
    specificRequirements: ''
  });

  const [isGenerating, setIsGenerating] = useState(false);
  const [showCustomSector, setShowCustomSector] = useState(false);
  const [customSectorValue, setCustomSectorValue] = useState('');
  const [generationProgress, setGenerationProgress] = useState<GenerationProgress>({
    step: '',
    progress: 0,
    isComplete: false
  });

  const sectors = [
    // SECTEUR PUBLIC
    'Administration centrale (Minist√®res, Pr√©fectures)',
    'Collectivit√©s territoriales (R√©gions, D√©partements, Communes)',
    '√âtablissements publics de sant√© (CHU, CHR, H√¥pitaux)',
    '√âducation nationale et enseignement sup√©rieur',
    'Justice et services p√©nitentiaires',
    'D√©fense et s√©curit√© nationale',
    'Services sociaux et m√©dico-sociaux publics',
    'Organismes de s√©curit√© sociale (CPAM, CAF, URSSAF)',
    '√âtablissements publics de recherche (CNRS, INRIA, CEA)',
    'Services publics de l\'emploi (P√¥le Emploi)',

    // SANT√â ET M√âDICO-SOCIAL
    'Sant√© - √âtablissements hospitaliers priv√©s',
    'Sant√© - Cliniques et centres m√©dicaux',
    'Sant√© - Laboratoires d\'analyses m√©dicales',
    'Sant√© - Pharmacies et officines',
    'Sant√© - Industrie pharmaceutique',
    'Sant√© - Dispositifs m√©dicaux et biotechnologies',
    'Sant√© - T√©l√©m√©decine et e-sant√©',
    'M√©dico-social - EHPAD et maisons de retraite',
    'M√©dico-social - Centres de soins sp√©cialis√©s',
    'M√©dico-social - Services d\'aide √† domicile',

    // SERVICES FINANCIERS COMPLETS
    'Banques de d√©tail et commerciales',
    'Banques d\'investissement et de march√©',
    'Banques coop√©ratives et mutualistes',
    'Assurances vie et non-vie',
    'Mutuelles et institutions de pr√©voyance',
    'Soci√©t√©s de gestion d\'actifs',
    '√âpargne et placement financier',
    'Fonds de pension et retraite',
    'Fintech et n√©obanques',
    'Services de paiement et mon√©tique',
    'Courtage et interm√©diation financi√®re',
    'Cr√©dit-bail et affacturage',

    // INDUSTRIE ET MANUFACTURING
    'Industrie automobile',
    'Industrie a√©ronautique et spatiale',
    'Industrie navale et maritime',
    'Industrie chimique et p√©trochimique',
    'Industrie pharmaceutique et cosm√©tique',
    'Industrie agroalimentaire',
    'Industrie textile et habillement',
    'Industrie du bois et papier',
    'M√©tallurgie et sid√©rurgie',
    'Industrie √©lectronique et composants',
    'Industrie des machines et √©quipements',
    'Industrie du verre et mat√©riaux',

    // √âNERGIE ET UTILITIES
    'Production d\'√©lectricit√© (nucl√©aire, renouvelable)',
    'Transport et distribution d\'√©lectricit√©',
    'Production et distribution de gaz',
    'P√©trole et raffinerie',
    '√ânergies renouvelables (√©olien, solaire)',
    'Services √©nerg√©tiques et efficacit√©',
    'Distribution d\'eau et assainissement',
    'Gestion des d√©chets et recyclage',

    // TRANSPORT ET LOGISTIQUE
    'Transport ferroviaire (SNCF, op√©rateurs priv√©s)',
    'Transport a√©rien (compagnies, a√©roports)',
    'Transport maritime et fluvial',
    'Transport routier de marchandises',
    'Transport urbain et interurbain',
    'Logistique et entreposage',
    'Messagerie et livraison',
    'Location de v√©hicules',

    // T√âL√âCOMMUNICATIONS ET M√âDIAS
    'Op√©rateurs t√©l√©coms fixes et mobiles',
    'Fournisseurs d\'acc√®s Internet',
    '√âquipementiers t√©l√©coms',
    'M√©dias et audiovisuel',
    'Presse et √©dition',
    'Publicit√© et communication',
    'Production cin√©matographique',

    // TECHNOLOGIES ET NUM√âRIQUE
    '√âditeurs de logiciels',
    'Services informatiques et conseil',
    'H√©bergement et cloud computing',
    'Cybers√©curit√©',
    'Intelligence artificielle et data science',
    'D√©veloppement web et mobile',
    'Jeux vid√©o et divertissement num√©rique',
    'Blockchain et cryptomonnaies',
    'IoT et objets connect√©s',

    // COMMERCE ET DISTRIBUTION
    'Grande distribution alimentaire',
    'Grande distribution sp√©cialis√©e',
    'Commerce de d√©tail traditionnel',
    'E-commerce et marketplaces',
    'Grossistes et distributeurs',
    'Franchises et r√©seaux',
    'Centres commerciaux',

    // IMMOBILIER ET CONSTRUCTION
    'Promotion immobili√®re',
    'Gestion immobili√®re et syndics',
    'Construction et BTP',
    'Architecture et ing√©nierie',
    'Am√©nagement et urbanisme',
    'Immobilier commercial',

    // SERVICES AUX ENTREPRISES
    'Conseil en management',
    'Audit et expertise comptable',
    'Services juridiques',
    'Ressources humaines et recrutement',
    'Marketing et √©tudes de march√©',
    'S√©curit√© priv√©e',
    'Nettoyage et services g√©n√©raux',
    'Restauration collective',

    // TOURISME ET LOISIRS
    'H√¥tellerie et h√©bergement',
    'Restauration et caf√©s',
    'Agences de voyage et tour-op√©rateurs',
    'Parcs d\'attractions et loisirs',
    'Sports et fitness',
    'Culture et spectacles',

    // AGRICULTURE ET AGROALIMENTAIRE
    'Agriculture et √©levage',
    'Coop√©ratives agricoles',
    'Industrie agroalimentaire',
    'Viticulture et spiritueux',
    'P√™che et aquaculture',
    'Sylviculture et exploitation foresti√®re',

    // SECTEURS √âMERGENTS
    '√âconomie sociale et solidaire',
    'Startups et scale-ups',
    'Incubateurs et acc√©l√©rateurs',
    'Fonds d\'investissement et capital-risque',
    'Plateformes collaboratives',
    '√âconomie circulaire',
    'Transition √©cologique et d√©veloppement durable'
  ];

  const organizationSizes = [
    'Micro-entreprise (1-9 employ√©s)',
    'Tr√®s petite entreprise - TPE (10-19 employ√©s)',
    'Petite entreprise - PE (20-49 employ√©s)',
    'Moyenne entreprise - ME (50-249 employ√©s)',
    'Entreprise de taille interm√©diaire - ETI (250-4999 employ√©s)',
    'Grande entreprise - GE (5000+ employ√©s)',
    'Groupe international (50000+ employ√©s)',
    'Administration centrale (Minist√®re, Direction g√©n√©rale)',
    '√âtablissement public national',
    'R√©gion (Conseil r√©gional)',
    'D√©partement (Conseil d√©partemental)',
    'Intercommunalit√© (M√©tropole, Communaut√©)',
    'Commune (< 10000 habitants)',
    'Commune (10000-100000 habitants)',
    'Commune (> 100000 habitants)',
    '√âtablissement public de sant√©',
    'Universit√© ou grande √©cole',
    'Organisme de recherche',
    'Association (< 50 employ√©s)',
    'Association (50-500 employ√©s)',
    'Association (> 500 employ√©s)',
    'Fondation',
    'Coop√©rative',
    'Mutuelle',
    'Syndicat professionnel'
  ];

  const siComponentsOptions = [
    // SYST√àMES DE GESTION D'ENTREPRISE
    'ERP - SAP (S/4HANA, ECC)',
    'ERP - Oracle (Fusion, E-Business Suite)',
    'ERP - Microsoft Dynamics',
    'ERP - Sage (X3, 100)',
    'ERP - Sectoriels (Cegid, Divalto)',
    'CRM - Salesforce',
    'CRM - Microsoft Dynamics CRM',
    'CRM - HubSpot, Pipedrive',
    'CRM - Solutions sectorielles',
    'Gestion documentaire (SharePoint, Alfresco)',
    'Workflow et BPM (Bonita, Activiti)',
    'Gestion de projet (Jira, Monday, Asana)',

    // INFRASTRUCTURE ET CLOUD
    'Infrastructure Cloud - AWS',
    'Infrastructure Cloud - Microsoft Azure',
    'Infrastructure Cloud - Google Cloud Platform',
    'Infrastructure Cloud - OVHcloud',
    'Infrastructure Cloud - Scaleway',
    'Cloud hybride et multi-cloud',
    'Conteneurisation (Docker, Kubernetes)',
    'Virtualisation (VMware, Hyper-V)',
    'Stockage SAN/NAS',
    'Sauvegarde et archivage',
    'CDN et r√©seaux de diffusion',

    // SYST√àMES M√âTIER SP√âCIALIS√âS
    'Syst√®mes bancaires (Core Banking)',
    'Syst√®mes d\'assurance',
    'Syst√®mes hospitaliers (SIH)',
    'Dossier m√©dical partag√© (DMP)',
    'Syst√®mes de laboratoire (LIMS)',
    'Syst√®mes de pharmacie',
    'Syst√®mes √©ducatifs (ENT, LMS)',
    'Syst√®mes RH et paie',
    'Syst√®mes comptables et financiers',
    'Syst√®mes de facturation',
    'Syst√®mes de caisse et TPV',

    // SYST√àMES INDUSTRIELS ET IoT
    'SCADA et supervision industrielle',
    'Automates programmables (PLC)',
    'Syst√®mes de contr√¥le-commande',
    'MES (Manufacturing Execution System)',
    'GMAO (Gestion maintenance)',
    'WMS (Warehouse Management)',
    'TMS (Transport Management)',
    'IoT et capteurs connect√©s',
    'Syst√®mes embarqu√©s',
    'Robotique industrielle',

    // SYST√àMES DE COMMUNICATION
    'Messagerie (Exchange, Gmail)',
    'Collaboration (Teams, Slack, Zoom)',
    'T√©l√©phonie IP (ToIP)',
    'Visioconf√©rence',
    'Intranet et portails',
    'R√©seaux sociaux d\'entreprise',
    'Syst√®mes de diffusion',

    // S√âCURIT√â ET IDENTIT√â
    'Active Directory / LDAP',
    'Syst√®mes IAM (Identity Management)',
    'SSO (Single Sign-On)',
    'PKI (Infrastructure √† cl√©s publiques)',
    'Antivirus et EDR',
    'SIEM (Security Information)',
    'Firewall et UTM',
    'VPN et acc√®s distant',
    'Chiffrement et HSM',
    'Gestion des privil√®ges (PAM)',

    // DONN√âES ET ANALYTICS
    'Entrep√¥ts de donn√©es (Data Warehouse)',
    'Lacs de donn√©es (Data Lake)',
    'Business Intelligence (Power BI, Tableau)',
    'Big Data (Hadoop, Spark)',
    'Intelligence artificielle / ML',
    'Analytics temps r√©el',
    'ETL et int√©gration de donn√©es',
    'Bases de donn√©es relationnelles',
    'Bases de donn√©es NoSQL',
    'Syst√®mes d√©cisionnels',

    // E-COMMERCE ET DIGITAL
    'Plateformes e-commerce (Magento, Shopify)',
    'Marketplaces (Amazon, eBay)',
    'CMS (WordPress, Drupal)',
    'Applications mobiles natives',
    'Applications web progressives (PWA)',
    'APIs et microservices',
    'Syst√®mes de paiement en ligne',
    'Gestion de contenu digital',
    'Marketing automation',
    'Personnalisation et recommandation',

    // SYST√àMES FINANCIERS
    'Syst√®mes de paiement (SEPA, cartes)',
    'Trading et march√©s financiers',
    'Gestion des risques financiers',
    'Conformit√© et reporting r√©glementaire',
    'Blockchain et cryptomonnaies',
    'Syst√®mes de cr√©dit et scoring',
    'Assurance et actuariat',
    'Comptabilit√© analytique',

    // SYST√àMES DE TRANSPORT
    'Syst√®mes de billettique',
    'Gestion de flotte',
    'Syst√®mes de navigation (GPS)',
    'Contr√¥le du trafic',
    'Syst√®mes a√©roportuaires',
    'Syst√®mes ferroviaires',
    'Syst√®mes portuaires',
    'Logistique et supply chain',

    // SYST√àMES PUBLICS
    'Syst√®mes √©lectoraux',
    '√âtat civil et population',
    'Syst√®mes fiscaux',
    'Syst√®mes judiciaires',
    'Syst√®mes p√©nitentiaires',
    'Syst√®mes d\'urgence (112, SAMU)',
    'Syst√®mes de s√©curit√© publique',
    'Syst√®mes environnementaux',

    // SYST√àMES √âMERGENTS
    'R√©alit√© virtuelle / augment√©e',
    'Impression 3D',
    'Drones et v√©hicules autonomes',
    'Edge computing',
    ' 5G et r√©seaux avanc√©s',
    'Quantum computing',
    'Syst√®mes distribu√©s',
    'Plateformes low-code/no-code'
  ];

  const technologiesOptions = [
    // SUITES BUREAUTIQUES ET COLLABORATION
    'Microsoft 365 / Office 365',
    'Google Workspace',
    'LibreOffice / OpenOffice',
    'Zimbra Collaboration',
    'Nextcloud / ownCloud',

    // SYST√àMES D'EXPLOITATION
    'Windows Server (2016, 2019, 2022)',
    'Linux (RHEL, Ubuntu, SUSE)',
    'Unix (AIX, Solaris)',
    'macOS Server',
    'Syst√®mes embarqu√©s (Embedded Linux)',

    // VIRTUALISATION ET CONTENEURS
    'VMware vSphere',
    'Microsoft Hyper-V',
    'Citrix XenServer',
    'KVM / QEMU',
    'Docker',
    'Kubernetes',
    'OpenShift',
    'Rancher',

    // BASES DE DONN√âES
    'Oracle Database',
    'Microsoft SQL Server',
    'MySQL / MariaDB',
    'PostgreSQL',
    'MongoDB',
    'Cassandra',
    'Redis',
    'Elasticsearch',
    'SAP HANA',
    'IBM Db2',

    // D√âVELOPPEMENT ET INT√âGRATION
    'Java / J2EE',
    '.NET Framework / .NET Core',
    'Python',
    'Node.js',
    'PHP',
    'Angular / React / Vue.js',
    'APIs REST / GraphQL',
    'Microservices',
    'ESB (Enterprise Service Bus)',
    'Apache Kafka',

    // S√âCURIT√â
    'Active Directory',
    'LDAP / OpenLDAP',
    'Kerberos',
    'SAML / OAuth',
    'PKI / Certificats',
    'Antivirus (Symantec, McAfee, Trend Micro)',
    'Firewall (Fortinet, Palo Alto, Cisco)',
    'SIEM (Splunk, QRadar, ArcSight)',
    'Vulnerability Management',

    // R√âSEAUX ET T√âL√âCOMS
    'Cisco (Routeurs, Switches)',
    'Juniper Networks',
    'F5 Load Balancers',
    'SD-WAN',
    'MPLS',
    'VPN (IPSec, SSL)',
    'Wi-Fi (Cisco, Aruba)',
    'T√©l√©phonie IP',

    // CLOUD ET DEVOPS
    'Amazon Web Services (AWS)',
    'Microsoft Azure',
    'Google Cloud Platform',
    'Terraform',
    'Ansible',
    'Jenkins',
    'GitLab CI/CD',
    'Prometheus / Grafana',
    'ELK Stack',

    // SYST√àMES MAINFRAME
    'IBM z/OS',
    'COBOL',
    'CICS',
    'IMS',
    'DB2 for z/OS',

    // TECHNOLOGIES √âMERGENTES
    'Intelligence Artificielle (TensorFlow, PyTorch)',
    'Machine Learning',
    'Blockchain (Ethereum, Hyperledger)',
    'IoT (Arduino, Raspberry Pi)',
    'RPA (UiPath, Blue Prism, Automation Anywhere)',
    'R√©alit√© Virtuelle / Augment√©e',
    'Edge Computing',
    'Quantum Computing',

    // OUTILS DE GESTION
    'ITSM (ServiceNow, Remedy)',
    'Monitoring (Nagios, Zabbix, PRTG)',
    'Backup (Veeam, Commvault, NetBackup)',
    'Antispam / Antimalware',
    'DLP (Data Loss Prevention)',
    'CASB (Cloud Access Security Broker)'
  ];

  const regulationsOptions = [
    // R√âGLEMENTATIONS EUROP√âENNES
    'RGPD (R√®glement G√©n√©ral sur la Protection des Donn√©es)',
    'NIS2 (Network and Information Security Directive)',
    'DORA (Digital Operational Resilience Act)',
    'AI Act (Artificial Intelligence Act)',
    'DSA (Digital Services Act)',
    'DMA (Digital Markets Act)',
    'eIDAS (Electronic Identification and Trust Services)',
    'PSD2 (Payment Services Directive)',
    'GDPR (pour organisations internationales)',
    'MiCA (Markets in Crypto-Assets)',
    'Directive Machine',
    'RoHS / REACH',

    // R√âGLEMENTATIONS FRAN√áAISES - S√âCURIT√â
    'ANSSI - RGS (R√©f√©rentiel G√©n√©ral de S√©curit√©)',
    'ANSSI - PGSSI-S (Politique G√©n√©rale de S√©curit√©)',
    'LPM (Loi de Programmation Militaire)',
    'Code de la D√©fense',
    'Instruction G√©n√©rale Interminist√©rielle (IGI) 1300',
    'Visa de s√©curit√© ANSSI',
    'Qualification ANSSI',
    'SecNumCloud',

    // R√âGLEMENTATIONS FRAN√áAISES - DONN√âES
    'Loi Informatique et Libert√©s',
    'Code des relations entre le public et l\'administration',
    'Loi pour une R√©publique num√©rique',
    'Loi de confiance dans l\'√©conomie num√©rique (LCEN)',
    'Code de la consommation (num√©rique)',

    // SECTEUR SANT√â
    'HDS (H√©bergement de Donn√©es de Sant√©)',
    'Code de la sant√© publique',
    'R√©f√©rentiel de s√©curit√© PGSSI-S',
    'Certification HDS',
    'RGPD Sant√©',
    'R√®glement MDR (Dispositifs m√©dicaux)',
    'R√®glement IVDR (Dispositifs de diagnostic in vitro)',
    'Pharmacovigilance',
    'H√©movigilance',
    'Loi Kouchner (droits des malades)',

    // SECTEUR FINANCIER
    'Code mon√©taire et financier',
    'ACPR (Autorit√© de Contr√¥le Prudentiel)',
    'AMF (Autorit√© des March√©s Financiers)',
    'Solvabilit√© II',
    'B√¢le III / IV',
    'MiFID II',
    'EMIR (European Market Infrastructure Regulation)',
    'PCI-DSS (Payment Card Industry)',
    'FATCA / CRS',
    'Lutte anti-blanchiment (LAB-FT)',
    'KYC (Know Your Customer)',

    // SECTEUR PUBLIC
    'Code g√©n√©ral des collectivit√©s territoriales',
    'Ordonnance 2005-1516 (march√©s publics)',
    'D√©cret 2019-536 (syst√®me d\'information de l\'√âtat)',
    'R√©f√©rentiel Marianne',
    'Accessibilit√© num√©rique (RGAA)',
    'Transparence et r√©utilisation des donn√©es publiques',
    'Service public num√©rique',

    // SECTEUR √âDUCATION
    'Code de l\'√©ducation',
    'RGPD √âducation',
    'Protection de l\'enfance num√©rique',
    'Donn√©es personnelles des mineurs',
    'ENT (Espaces Num√©riques de Travail)',

    // SECTEUR √âNERGIE
    'Code de l\'√©nergie',
    'Directive europ√©enne sur la s√©curit√© des r√©seaux',
    'R√©glementation nucl√©aire (ASN)',
    'Transition √©nerg√©tique',
    'Smart grids',

    // SECTEUR TRANSPORT
    'Code des transports',
    'R√©glementation a√©ronautique (DGAC, EASA)',
    'R√©glementation ferroviaire (EPSF)',
    'R√©glementation maritime',
    'V√©hicules autonomes',
    'Drones civils',

    // SECTEUR T√âL√âCOMS
    'Code des postes et communications √©lectroniques',
    'ARCEP (Autorit√© de R√©gulation)',
    'Portabilit√© des num√©ros',
    'Neutralit√© du net',
    'Roaming europ√©en',

    // NORMES INTERNATIONALES
    'ISO 27001 (Management de la s√©curit√©)',
    'ISO 27002 (Bonnes pratiques s√©curit√©)',
    'ISO 27005 (Gestion des risques)',
    'ISO 22301 (Continuit√© d\'activit√©)',
    'ISO 20000 (Management des services IT)',
    'ITIL (Information Technology Infrastructure Library)',
    'COBIT (Control Objectives for IT)',
    'NIST Cybersecurity Framework',
    'SOX (Sarbanes-Oxley Act)',
    'HIPAA (Health Insurance Portability)',
    'FISMA (Federal Information Security)',

    // SECTEURS SP√âCIALIS√âS
    'Agroalimentaire (HACCP, IFS, BRC)',
    'Automobile (ISO/TS 16949)',
    'A√©ronautique (EN 9100)',
    'D√©fense (ISO 21500)',
    'Environnement (ISO 14001)',
    'Qualit√© (ISO 9001)',
    'D√©veloppement durable (ISO 26000)',

    // R√âGLEMENTATIONS √âMERGENTES
    'Souverainet√© num√©rique',
    'Cloud de confiance',
    'Cyberscore',
    'Certification cybers√©curit√©',
    '√âthique de l\'IA',
    'Algorithmes publics',
    'Plateformes num√©riques',
    '√âconomie circulaire num√©rique'
  ];

  const handleArrayFieldChange = (field: keyof MissionContext, value: string, checked: boolean) => {
    setContext(prev => ({
      ...prev,
      [field]: checked
        ? [...(prev[field] as string[]), value]
        : (prev[field] as string[]).filter(item => item !== value)
    }));
  };

  // Fonction pour g√©rer la saisie libre du secteur
  const handleCustomSectorSubmit = () => {
    if (customSectorValue.trim()) {
      setContext(prev => ({ ...prev, sector: customSectorValue.trim() }));
      setCustomSectorValue('');
      setShowCustomSector(false);
    }
  };

  const handleCustomSectorCancel = () => {
    setCustomSectorValue('');
    setShowCustomSector(false);
  };

  const generateMission = async () => {
    setIsGenerating(true);
    setGenerationProgress({ step: 'Initialisation...', progress: 0, isComplete: false });

    try {
      // Simulation du processus de g√©n√©ration
      const steps = [
        'Analyse du contexte m√©tier...',
        'G√©n√©ration des biens essentiels...',
        'Identification des sources de risque...',
        'Cr√©ation des sc√©narios strat√©giques...',
        'D√©veloppement des sc√©narios op√©rationnels...',
        'D√©finition des mesures de s√©curit√©...',
        'G√©n√©ration des rapports...',
        'Finalisation de la mission...'
      ];

      for (let i = 0; i < steps.length; i++) {
        setGenerationProgress({
          step: steps[i],
          progress: ((i + 1) / steps.length) * 100,
          isComplete: false
        });
        
        // Simulation du temps de traitement
        await new Promise(resolve => setTimeout(resolve, 1500));
      }

      // Appel au service de g√©n√©ration (√† impl√©menter)
      const missionId = await generateMissionFromContext(context);

      setGenerationProgress({
        step: 'Mission g√©n√©r√©e avec succ√®s !',
        progress: 100,
        isComplete: true,
        missionId,
        reports: [
          'Rapport Atelier 1 - Biens essentiels',
          'Rapport Atelier 2 - Sources de risque',
          'Rapport Atelier 3 - Sc√©narios strat√©giques',
          'Rapport Atelier 4 - Sc√©narios op√©rationnels',
          'Rapport Atelier 5 - Mesures de s√©curit√©',
          'Rapport de synth√®se ex√©cutif'
        ]
      });

    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration:', error);
      setGenerationProgress({
        step: 'Erreur lors de la g√©n√©ration',
        progress: 0,
        isComplete: false
      });
    } finally {
      setIsGenerating(false);
    }
  };

  const generateMissionFromContext = async (context: MissionContext): Promise<string> => {
    const service = AutoMissionGeneratorService.getInstance();
    const result = await service.generateMission(context as ServiceMissionContext);
    return result.missionId;
  };

  const isFormValid = () => {
    return context.organizationName && 
           context.sector && 
           context.organizationSize &&
           context.siComponents.length > 0 &&
           context.criticalProcesses.length > 0;
  };

  if (isGenerating || generationProgress.isComplete) {
    return (
      <div className="max-w-4xl mx-auto p-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Zap className="h-6 w-6 text-blue-600" />
              G√©n√©ration Automatique de Mission EBIOS RM
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="text-center space-y-4">
              <div className="text-lg font-medium">{generationProgress.step}</div>
              <Progress value={generationProgress.progress} className="w-full" />
              <div className="text-sm text-gray-600">
                {generationProgress.progress.toFixed(0)}% termin√©
              </div>
            </div>

            {generationProgress.isComplete && (
              <div className="space-y-4">
                <Alert>
                  <CheckCircle className="h-4 w-4" />
                  <AlertDescription>
                    Mission g√©n√©r√©e avec succ√®s ! ID: {generationProgress.missionId}
                  </AlertDescription>
                </Alert>

                <div className="space-y-2">
                  <h3 className="font-medium">Rapports g√©n√©r√©s :</h3>
                  {generationProgress.reports?.map((report, index) => (
                    <div key={index} className="flex items-center justify-between p-2 border rounded">
                      <span className="flex items-center gap-2">
                        <FileText className="h-4 w-4" />
                        {report}
                      </span>
                      <Button size="sm" variant="outline">
                        <Download className="h-4 w-4 mr-1" />
                        T√©l√©charger
                      </Button>
                    </div>
                  ))}
                </div>

                <div className="flex gap-2">
                  <Button onClick={() => window.location.href = `/missions/${generationProgress.missionId}`}>
                    Voir la mission
                  </Button>
                  <Button variant="outline" onClick={() => {
                    setGenerationProgress({ step: '', progress: 0, isComplete: false });
                    setContext({
                      organizationName: '',
                      sector: '',
                      organizationSize: '',
                      geographicScope: '',
                      criticalityLevel: '',
                      siComponents: [],
                      mainTechnologies: [],
                      externalInterfaces: [],
                      sensitiveData: [],
                      criticalProcesses: [],
                      stakeholders: [],
                      regulations: [],
                      financialStakes: '',
                      securityMaturity: '',
                      pastIncidents: '',
                      regulatoryConstraints: [],
                      securityBudget: '',
                      missionObjectives: [],
                      timeframe: '',
                      specificRequirements: ''
                    });
                  }}>
                    Nouvelle g√©n√©ration
                  </Button>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto p-6 space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Zap className="h-6 w-6 text-blue-600" />
            G√©n√©rateur Automatique de Mission EBIOS RM
          </CardTitle>
          <p className="text-gray-600">
            Saisissez le contexte de votre organisation pour g√©n√©rer automatiquement une mission EBIOS RM compl√®te avec tous les ateliers et rapports.
          </p>
        </CardHeader>
      </Card>

      {/* Formulaire de contexte complet */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Section 1: Informations organisationnelles */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Informations Organisationnelles</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="orgName">Nom de l'organisation *</Label>
              <Input
                id="orgName"
                value={context.organizationName}
                onChange={(e) => setContext(prev => ({ ...prev, organizationName: e.target.value }))}
                placeholder="Ex: H√¥pital Universitaire de Paris"
              />
            </div>

            <div>
              <Label htmlFor="sector">Secteur d'activit√© *</Label>
              <Select value={context.sector} onValueChange={(value) => setContext(prev => ({ ...prev, sector: value }))}>
                <SelectTrigger>
                  <SelectValue placeholder="S√©lectionnez un secteur" />
                </SelectTrigger>
                <SelectContent>
                  {sectors.map(sector => (
                    <SelectItem key={sector} value={sector}>{sector}</SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label htmlFor="orgSize">Taille de l'organisation *</Label>
              <Select value={context.organizationSize} onValueChange={(value) => setContext(prev => ({ ...prev, organizationSize: value }))}>
                <SelectTrigger>
                  <SelectValue placeholder="S√©lectionnez la taille" />
                </SelectTrigger>
                <SelectContent>
                  {organizationSizes.map(size => (
                    <SelectItem key={size} value={size}>{size}</SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label htmlFor="geoScope">P√©rim√®tre g√©ographique</Label>
              <Input
                id="geoScope"
                value={context.geographicScope}
                onChange={(e) => setContext(prev => ({ ...prev, geographicScope: e.target.value }))}
                placeholder="Ex: National, R√©gional, International"
              />
            </div>

            <div>
              <Label htmlFor="criticality">Niveau de criticit√©</Label>
              <Select value={context.criticalityLevel} onValueChange={(value) => setContext(prev => ({ ...prev, criticalityLevel: value }))}>
                <SelectTrigger>
                  <SelectValue placeholder="Niveau de criticit√©" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="low">Faible</SelectItem>
                  <SelectItem value="medium">Moyen</SelectItem>
                  <SelectItem value="high">√âlev√©</SelectItem>
                  <SelectItem value="critical">Critique</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </CardContent>
        </Card>

        {/* Section 2: Contexte technique */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Contexte Technique</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label>Composants SI concern√©s *</Label>
              <div className="grid grid-cols-1 gap-2 mt-2 max-h-48 overflow-y-auto">
                {siComponentsOptions.map(component => (
                  <div key={component} className="flex items-center space-x-2">
                    <Checkbox
                      id={component}
                      checked={context.siComponents.includes(component)}
                      onCheckedChange={(checked) => handleArrayFieldChange('siComponents', component, checked as boolean)}
                    />
                    <Label htmlFor={component} className="text-sm">{component}</Label>
                  </div>
                ))}
              </div>
              {context.siComponents.length > 0 && (
                <div className="flex flex-wrap gap-1 mt-2">
                  {context.siComponents.map(component => (
                    <Badge key={component} variant="secondary" className="text-xs">
                      {component}
                    </Badge>
                  ))}
                </div>
              )}
            </div>

            <div>
              <Label>Technologies principales</Label>
              <div className="grid grid-cols-1 gap-2 mt-2 max-h-32 overflow-y-auto">
                {technologiesOptions.map(tech => (
                  <div key={tech} className="flex items-center space-x-2">
                    <Checkbox
                      id={tech}
                      checked={context.mainTechnologies.includes(tech)}
                      onCheckedChange={(checked) => handleArrayFieldChange('mainTechnologies', tech, checked as boolean)}
                    />
                    <Label htmlFor={tech} className="text-sm">{tech}</Label>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Section 3: Processus m√©tier et parties prenantes */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Processus M√©tier</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="criticalProcesses">Processus critiques concern√©s *</Label>
              <Textarea
                id="criticalProcesses"
                value={context.criticalProcesses.join('\n')}
                onChange={(e) => setContext(prev => ({
                  ...prev,
                  criticalProcesses: e.target.value.split('\n').filter(p => p.trim())
                }))}
                placeholder="Un processus par ligne&#10;Ex:&#10;Gestion des patients&#10;Facturation&#10;Gestion des stocks"
                rows={4}
              />
            </div>

            <div>
              <Label htmlFor="stakeholders">Parties prenantes principales</Label>
              <Textarea
                id="stakeholders"
                value={context.stakeholders.join('\n')}
                onChange={(e) => setContext(prev => ({
                  ...prev,
                  stakeholders: e.target.value.split('\n').filter(s => s.trim())
                }))}
                placeholder="Une partie prenante par ligne&#10;Ex:&#10;Patients&#10;Personnel m√©dical&#10;Fournisseurs"
                rows={3}
              />
            </div>

            <div>
              <Label htmlFor="financialStakes">Enjeux financiers</Label>
              <Input
                id="financialStakes"
                value={context.financialStakes}
                onChange={(e) => setContext(prev => ({ ...prev, financialStakes: e.target.value }))}
                placeholder="Ex: CA 500M‚Ç¨, Budget IT 50M‚Ç¨"
              />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Conformit√© et S√©curit√©</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <Label>R√©glementations applicables</Label>
              <div className="grid grid-cols-1 gap-2 mt-2 max-h-32 overflow-y-auto">
                {regulationsOptions.map(regulation => (
                  <div key={regulation} className="flex items-center space-x-2">
                    <Checkbox
                      id={regulation}
                      checked={context.regulations.includes(regulation)}
                      onCheckedChange={(checked) => handleArrayFieldChange('regulations', regulation, checked as boolean)}
                    />
                    <Label htmlFor={regulation} className="text-sm">{regulation}</Label>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <Label htmlFor="securityMaturity">Maturit√© s√©curit√© actuelle</Label>
              <Select value={context.securityMaturity} onValueChange={(value) => setContext(prev => ({ ...prev, securityMaturity: value }))}>
                <SelectTrigger>
                  <SelectValue placeholder="Niveau de maturit√©" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="initial">Initial (niveau 1)</SelectItem>
                  <SelectItem value="managed">G√©r√© (niveau 2)</SelectItem>
                  <SelectItem value="defined">D√©fini (niveau 3)</SelectItem>
                  <SelectItem value="quantitatively-managed">G√©r√© quantitativement (niveau 4)</SelectItem>
                  <SelectItem value="optimizing">En optimisation (niveau 5)</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label htmlFor="pastIncidents">Incidents pass√©s (optionnel)</Label>
              <Textarea
                id="pastIncidents"
                value={context.pastIncidents}
                onChange={(e) => setContext(prev => ({ ...prev, pastIncidents: e.target.value }))}
                placeholder="D√©crivez bri√®vement les incidents de s√©curit√© pass√©s"
                rows={2}
              />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Section 4: Objectifs et finalisation */}
      <Card>
        <CardHeader>
          <CardTitle className="text-lg">Objectifs de la Mission</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            <div>
              <Label>Objectifs principaux</Label>
              <div className="space-y-2 mt-2">
                {[
                  '√âvaluation des risques cyber',
                  'Conformit√© r√©glementaire',
                  'Plan de traitement des risques',
                  'Am√©lioration de la posture s√©curit√©',
                  'Sensibilisation des √©quipes',
                  'Audit de s√©curit√© complet'
                ].map(objective => (
                  <div key={objective} className="flex items-center space-x-2">
                    <Checkbox
                      id={objective}
                      checked={context.missionObjectives.includes(objective)}
                      onCheckedChange={(checked) => handleArrayFieldChange('missionObjectives', objective, checked as boolean)}
                    />
                    <Label htmlFor={objective} className="text-sm">{objective}</Label>
                  </div>
                ))}
              </div>
            </div>

            <div className="space-y-4">
              <div>
                <Label htmlFor="timeframe">D√©lai souhait√©</Label>
                <Select value={context.timeframe} onValueChange={(value) => setContext(prev => ({ ...prev, timeframe: value }))}>
                  <SelectTrigger>
                    <SelectValue placeholder="D√©lai de r√©alisation" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="1-month">1 mois</SelectItem>
                    <SelectItem value="3-months">3 mois</SelectItem>
                    <SelectItem value="6-months">6 mois</SelectItem>
                    <SelectItem value="1-year">1 an</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div>
                <Label htmlFor="budget">Budget s√©curit√© disponible</Label>
                <Select value={context.securityBudget} onValueChange={(value) => setContext(prev => ({ ...prev, securityBudget: value }))}>
                  <SelectTrigger>
                    <SelectValue placeholder="Budget approximatif" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="less-100k">{'< 100k‚Ç¨'}</SelectItem>
                    <SelectItem value="100k-500k">100k‚Ç¨ - 500k‚Ç¨</SelectItem>
                    <SelectItem value="500k-1M">500k‚Ç¨ - 1M‚Ç¨</SelectItem>
                    <SelectItem value="more-1M">{'> 1M‚Ç¨'}</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>

          <div>
            <Label htmlFor="specificRequirements">Exigences sp√©cifiques (optionnel)</Label>
            <Textarea
              id="specificRequirements"
              value={context.specificRequirements}
              onChange={(e) => setContext(prev => ({ ...prev, specificRequirements: e.target.value }))}
              placeholder="D√©crivez toute exigence particuli√®re, contrainte ou contexte sp√©cifique √† prendre en compte"
              rows={3}
            />
          </div>

          {/* R√©sum√© du contexte */}
          {(context.organizationName || context.sector) && (
            <div className="mt-6 p-4 bg-blue-50 rounded-lg">
              <h4 className="font-medium text-blue-900 mb-2">R√©sum√© du contexte</h4>
              <div className="text-sm text-blue-800 space-y-1">
                {context.organizationName && <p><strong>Organisation:</strong> {context.organizationName}</p>}
                {context.sector && <p><strong>Secteur:</strong> {context.sector}</p>}
                {context.organizationSize && <p><strong>Taille:</strong> {context.organizationSize}</p>}
                {context.siComponents.length > 0 && (
                  <p><strong>Composants SI:</strong> {context.siComponents.slice(0, 3).join(', ')}
                    {context.siComponents.length > 3 && ` (+${context.siComponents.length - 3} autres)`}
                  </p>
                )}
                {context.criticalProcesses.length > 0 && (
                  <p><strong>Processus critiques:</strong> {context.criticalProcesses.slice(0, 2).join(', ')}
                    {context.criticalProcesses.length > 2 && ` (+${context.criticalProcesses.length - 2} autres)`}
                  </p>
                )}
                {context.regulations.length > 0 && (
                  <p><strong>Conformit√©:</strong> {context.regulations.slice(0, 3).join(', ')}
                    {context.regulations.length > 3 && ` (+${context.regulations.length - 3} autres)`}
                  </p>
                )}
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Bouton de g√©n√©ration */}
      <Card>
        <CardContent className="pt-6">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-medium">Pr√™t √† g√©n√©rer votre mission ?</h3>
              <p className="text-sm text-gray-600">
                Tous les ateliers et rapports seront cr√©√©s automatiquement
              </p>
            </div>
            <Button 
              onClick={generateMission}
              disabled={!isFormValid()}
              className="bg-blue-600 hover:bg-blue-700"
            >
              <Zap className="h-4 w-4 mr-2" />
              G√©n√©rer la Mission Compl√®te
            </Button>
          </div>
          
          {!isFormValid() && (
            <Alert className="mt-4">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                Veuillez remplir au minimum : nom organisation, secteur, taille, composants SI et processus critiques
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default AutoMissionGenerator;
