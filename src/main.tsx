import React from 'react';
import { createRoot } from 'react-dom/client';
import { Provider } from 'react-redux';
import { store } from './store';
import App from './App';
import { SettingsInitializer } from './services/settings/SettingsInitializer';
// import { trainingIntegrationService } from './services/training/TrainingIntegrationService'; // D√âSACTIV√â
import { requestInterceptor } from './services/security/RequestInterceptor';
import './index.css';

// üöÄ Initialisation des param√®tres au d√©marrage
const initializeApp = async () => {
  try {
    console.log('üöÄ D√©marrage de EBIOS AI Manager...');

    // üõ°Ô∏è INTERCEPTEUR TEMPORAIREMENT D√âSACTIV√â
    // L'intercepteur sera r√©activ√© apr√®s r√©solution des probl√®mes Firebase
    console.log('üõ°Ô∏è Intercepteur de s√©curit√© temporairement d√©sactiv√©');
    // requestInterceptor.activate(); // D√âSACTIV√â TEMPORAIREMENT

    // Initialiser les param√®tres
    const settingsInitializer = SettingsInitializer.getInstance();
    await settingsInitializer.initialize();

    // üö® SERVICE FORMATION D√âSACTIV√â - Module ind√©pendant
    console.log('‚ö†Ô∏è Service d\'int√©gration formation d√©sactiv√© - Module ind√©pendant');

    /* ANCIEN CODE D√âSACTIV√â
    // Initialiser le service d'int√©gration formation (avec protection)
    try {
      await trainingIntegrationService.initialize();
      console.log('‚úÖ Service formation initialis√©');
    } catch (error) {
      console.warn('‚ö†Ô∏è Erreur initialisation formation (non bloquante):', error);
      // L'application continue de fonctionner sans le module formation
    }
    */

    console.log('‚úÖ Application initialis√©e avec succ√®s');
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error);
    // L'application peut continuer m√™me si l'initialisation √©choue
  }
};

// Initialiser l'application
initializeApp();

createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>
);