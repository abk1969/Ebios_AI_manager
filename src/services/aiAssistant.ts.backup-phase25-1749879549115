import {
  BusinessValue,
  SupportingAsset,
  RiskSource,
  DreadedEvent,
  StrategicScenario,
  SecurityMeasure,
  GravityScale,
  LikelihoodScale,
  RiskLevel
} from '@/types/ebios';
import {
  RISK_SOURCE_CATEGORIES,
  SUPPORTING_ASSET_TYPES,
  EbiosUtils,
  EBIOS_SCALES
} from '@/lib/ebios-constants';
import { dataQualityDetector, DataQualityReport } from './ai/DataQualityDetector';

export interface AISuggestion {
  id: string;
  type: 'suggestion' | 'warning' | 'error' | 'best-practice';
  title: string;
  description: string;
  actionText?: string;
  priority: 'low' | 'medium' | 'high' | 'critical';
  category: string;
  relatedData?: any;
  source: 'anssi' | 'iso27005' | 'ebios-rm' | 'expert-knowledge';
}

export interface ValidationResult {
  isValid: boolean;
  errors: AISuggestion[];
  warnings: AISuggestion[];
  suggestions: AISuggestion[];
  score: number; // 0-100
}

export interface ContextualHelp {
  title: string;
  content: string;
  examples: string[];
  bestPractices: string[];
  anssiReferences: string[];
}

class AIAssistantService {
  
  // === ASSISTANCE CONTEXTUELLES M√âTIER ===

  /**
   * G√©n√®re des suggestions pour les valeurs m√©tier
   */
  suggestBusinessValues(existingValues: BusinessValue[], organizationType?: string): AISuggestion[] {
    const suggestions: AISuggestion[] = [];
    const existingCategories = new Set(existingValues.map(v => v.category).filter(Boolean));
    
    // Suggestions bas√©es sur le type d'organisation
    const commonBusinessValues = {
      'commercial': [
        { category: 'financial', name: 'Chiffre d\'affaires', description: 'Revenus g√©n√©r√©s par l\'activit√© commerciale' },
        { category: 'reputation', name: 'Image de marque', description: 'R√©putation et confiance des clients' },
        { category: 'operational', name: 'Continuit√© de service', description: 'Capacit√© √† maintenir les services clients' }
      ],
      'public': [
        { category: 'service', name: 'Service public', description: 'Mission de service public aux citoyens' },
        { category: 'legal', name: 'Conformit√© r√©glementaire', description: 'Respect des obligations l√©gales' },
        { category: 'operational', name: 'Continuit√© administrative', description: 'Fonctionnement continu des services' }
      ],
      'healthcare': [
        { category: 'safety', name: 'S√©curit√© des patients', description: 'Protection et s√©curit√© des soins' },
        { category: 'legal', name: 'Secret m√©dical', description: 'Confidentialit√© des donn√©es de sant√©' },
        { category: 'operational', name: 'Continuit√© des soins', description: 'Maintien des soins essentiels' }
      ]
    };

    const orgType = organizationType || 'commercial';
    const recommendedValues = commonBusinessValues[orgType as keyof typeof commonBusinessValues] || commonBusinessValues.commercial;

    recommendedValues.forEach((value, index) => {
      if (!existingCategories.has(value.category as any)) {
        suggestions.push({
          id: `bv-suggest-${index}`,
          type: 'suggestion',
          title: `Valeur m√©tier recommand√©e : ${value.name}`,
          description: `${value.description}. Cette valeur est typique pour votre type d'organisation.`,
          actionText: 'Ajouter cette valeur m√©tier',
          priority: 'medium',
          category: 'business-values',
          relatedData: value,
          source: 'expert-knowledge'
        });
      }
    });

    // V√©rification de la compl√©tude
    if (existingValues.length < 3) {
      suggestions.push({
        id: 'bv-completeness',
        type: 'warning',
        title: 'Nombre insuffisant de valeurs m√©tier',
        description: 'L\'ANSSI recommande d\'identifier au moins 3-5 valeurs m√©tier principales pour une analyse compl√®te.',
        priority: 'medium',
        category: 'completeness',
        source: 'anssi'
      });
    }

    return suggestions;
  }

  /**
   * üîç NOUVEAU : Valide la qualit√© des donn√©es saisies
   */
  validateDataQuality(data: {
    businessValues?: BusinessValue[];
    dreadedEvents?: DreadedEvent[];
    supportingAssets?: SupportingAsset[];
  }): ValidationResult {
    const errors: AISuggestion[] = [];
    const warnings: AISuggestion[] = [];
    const suggestions: AISuggestion[] = [];
    let score = 100;

    // Validation des valeurs m√©tier
    if (data.businessValues) {
      for (const bv of data.businessValues) {
        const qualityReport = dataQualityDetector.analyzeBusinessValue(bv.name, bv.description);

        if (!qualityReport.isValid) {
          for (const issue of qualityReport.issues) {
            if (issue.severity === 'critical' || issue.severity === 'high') {
              errors.push({
                id: `quality-${issue.id}`,
                type: 'error',
                title: `‚ùå Donn√©es invalides : ${bv.name}`,
                description: issue.message,
                actionText: issue.autoFixAvailable ? 'Corriger automatiquement' : 'Corriger manuellement',
                priority: issue.severity === 'critical' ? 'critical' : 'high',
                category: 'data-quality',
                relatedData: {
                  field: issue.field,
                  suggestedValue: issue.suggestedValue,
                  originalValue: issue.value
                },
                source: 'expert-knowledge'
              });
            }
          }
          score -= (100 - qualityReport.overallScore) / 4;
        }
      }
    }

    // Validation des √©v√©nements redout√©s
    if (data.dreadedEvents) {
      for (const de of data.dreadedEvents) {
        const qualityReport = dataQualityDetector.analyzeDreadedEvent(de.name, de.description);

        if (!qualityReport.isValid) {
          for (const issue of qualityReport.issues) {
            if (issue.severity === 'critical' || issue.severity === 'high') {
              errors.push({
                id: `quality-${issue.id}`,
                type: 'error',
                title: `‚ùå √âv√©nement redout√© invalide : ${de.name}`,
                description: issue.message,
                actionText: issue.autoFixAvailable ? 'Corriger automatiquement' : 'Corriger manuellement',
                priority: issue.severity === 'critical' ? 'critical' : 'high',
                category: 'data-quality',
                relatedData: {
                  field: issue.field,
                  suggestedValue: issue.suggestedValue,
                  originalValue: issue.value
                },
                source: 'expert-knowledge'
              });
            }
          }
          score -= (100 - qualityReport.overallScore) / 4;
        }
      }
    }

    // Validation des actifs supports
    if (data.supportingAssets) {
      for (const sa of data.supportingAssets) {
        const qualityReport = dataQualityDetector.analyzeSupportingAsset(sa.name, sa.description);

        if (!qualityReport.isValid) {
          for (const issue of qualityReport.issues) {
            if (issue.severity === 'critical' || issue.severity === 'high') {
              warnings.push({
                id: `quality-${issue.id}`,
                type: 'warning',
                title: `‚ö†Ô∏è Actif support suspect : ${sa.name}`,
                description: issue.message,
                actionText: issue.autoFixAvailable ? 'Corriger automatiquement' : 'Corriger manuellement',
                priority: issue.severity === 'critical' ? 'critical' : 'high',
                category: 'data-quality',
                relatedData: {
                  field: issue.field,
                  suggestedValue: issue.suggestedValue,
                  originalValue: issue.value
                },
                source: 'expert-knowledge'
              });
            }
          }
        }
      }
    }

    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      suggestions,
      score: Math.max(0, score)
    };
  }

  /**
   * Valide les actifs de soutien selon EBIOS RM
   */
  validateSupportingAssets(assets: SupportingAsset[], businessValues: BusinessValue[]): ValidationResult {
    const errors: AISuggestion[] = [];
    const warnings: AISuggestion[] = [];
    const suggestions: AISuggestion[] = [];
    let score = 100;

    // V√©rification de la couverture des types d'actifs
    const existingTypes = new Set(assets.map(a => a.type));
    const requiredTypes = ['data', 'software', 'hardware', 'network'];
    
    requiredTypes.forEach(type => {
      if (!existingTypes.has(type as any)) {
        warnings.push({
          id: `asset-type-${type}`,
          type: 'warning',
          title: `Type d'actif manquant : ${SUPPORTING_ASSET_TYPES[type as keyof typeof SUPPORTING_ASSET_TYPES]}`,
          description: 'Ce type d\'actif est g√©n√©ralement pr√©sent dans la plupart des organisations.',
          priority: 'medium',
          category: 'asset-coverage',
          source: 'ebios-rm'
        });
        score -= 10;
      }
    });

    // V√©rification des liaisons avec les valeurs m√©tier
    assets.forEach(asset => {
      if (!asset.relatedBusinessValues || asset.relatedBusinessValues.length === 0) {
        errors.push({
          id: `asset-no-bv-${asset.id}`,
          type: 'error',
          title: `Actif non li√© : ${asset.name}`,
          description: 'Chaque actif de soutien doit supporter au moins une valeur m√©tier selon EBIOS RM.',
          priority: 'high',
          category: 'asset-linkage',
          source: 'anssi'
        });
        score -= 15;
      }
    });

    // Suggestions d'am√©lioration de criticit√©
    assets.forEach(asset => {
      if (asset.criticality === 'low' && asset.relatedBusinessValues && asset.relatedBusinessValues.length > 2) {
        suggestions.push({
          id: `asset-criticality-${asset.id}`,
          type: 'suggestion',
          title: `R√©√©valuer la criticit√© : ${asset.name}`,
          description: 'Cet actif supporte plusieurs valeurs m√©tier, sa criticit√© pourrait √™tre sous-√©valu√©e.',
          priority: 'medium',
          category: 'risk-assessment',
          source: 'expert-knowledge'
        });
      }
    });

    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      suggestions,
      score: Math.max(0, score)
    };
  }

  /**
   * Sugg√®re des sources de risque bas√©es sur le contexte
   */
  suggestRiskSources(existingSources: RiskSource[], assets: SupportingAsset[]): AISuggestion[] {
    const suggestions: AISuggestion[] = [];
    const existingCategories = new Set(existingSources.map(s => s.category));

    // Sources de risque communes par type d'actif
    const assetTypes = new Set(assets.map(a => a.type));
    
    if (assetTypes.has('data') && !existingCategories.has('cybercriminal')) {
      suggestions.push({
        id: 'rs-cybercriminal',
        type: 'suggestion',
        title: 'Source de risque recommand√©e : Cybercriminels',
        description: 'Vous avez des actifs de donn√©es. Les cybercriminels repr√©sentent une menace majeure pour ce type d\'actif.',
        actionText: 'Ajouter cette source de risque',
        priority: 'high',
        category: 'risk-sources',
        relatedData: {
          category: 'cybercriminal',
          name: 'Cybercriminels organis√©s',
          description: 'Groupes criminels sp√©cialis√©s dans le vol et le chantage de donn√©es'
        },
        source: 'expert-knowledge'
      });
    }

    if (assetTypes.has('software') && !existingCategories.has('insider')) {
      suggestions.push({
        id: 'rs-insider',
        type: 'suggestion',
        title: 'Source de risque recommand√©e : Menaces internes',
        description: 'Les actifs logiciels sont souvent vuln√©rables aux menaces internes (employ√©s, prestataires).',
        actionText: 'Ajouter cette source de risque',
        priority: 'medium',
        category: 'risk-sources',
        relatedData: {
          category: 'insider',
          name: 'Personnel interne malveillant',
          description: 'Employ√©s ou prestataires avec acc√®s privil√©gi√©'
        },
        source: 'ebios-rm'
      });
    }

    return suggestions;
  }

  /**
   * Valide et am√©liore les √©v√©nements redout√©s
   */
  validateDreadedEvents(events: DreadedEvent[], businessValues: BusinessValue[]): ValidationResult {
    const errors: AISuggestion[] = [];
    const warnings: AISuggestion[] = [];
    const suggestions: AISuggestion[] = [];
    let score = 100;

    // V√©rification de la couverture des valeurs m√©tier
    const coveredBusinessValues = new Set();
    events.forEach(event => {
      event.impactedBusinessValues?.forEach(bvId => coveredBusinessValues.add(bvId));
    });

    businessValues.forEach(bv => {
      if (!coveredBusinessValues.has(bv.id)) {
        warnings.push({
          id: `bv-uncovered-${bv.id}`,
          type: 'warning',
          title: `Valeur m√©tier non couverte : ${bv.name}`,
          description: 'Cette valeur m√©tier n\'est affect√©e par aucun √©v√©nement redout√© identifi√©.',
          priority: 'medium',
          category: 'coverage',
          source: 'ebios-rm'
        });
        score -= 10;
      }
    });

    // Suggestions d'√©v√©nements redout√©s classiques
    const commonDreadedEvents = [
      {
        pattern: 'confidentialit√©',
        name: 'Atteinte √† la confidentialit√© des donn√©es',
        description: 'Divulgation non autoris√©e d\'informations sensibles'
      },
      {
        pattern: 'disponibilit√©',
        name: 'Perte de disponibilit√© des services',
        description: 'Interruption ou d√©gradation des services essentiels'
      },
      {
        pattern: 'int√©grit√©',
        name: 'Alt√©ration de l\'int√©grit√© des donn√©es',
        description: 'Modification non autoris√©e d\'informations critiques'
      }
    ];

    commonDreadedEvents.forEach((template, index) => {
      const hasEvent = events.some(event => 
        event.name.toLowerCase().includes(template.pattern) ||
        event.description.toLowerCase().includes(template.pattern)
      );
      
      if (!hasEvent) {
        suggestions.push({
          id: `de-suggest-${index}`,
          type: 'suggestion',
          title: `√âv√©nement redout√© manquant : ${template.name}`,
          description: `${template.description}. Cet √©v√©nement est critique dans la plupart des analyses EBIOS RM.`,
          actionText: 'Ajouter cet √©v√©nement',
          priority: 'high',
          category: 'dreaded-events',
          relatedData: template,
          source: 'anssi'
        });
      }
    });

    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      suggestions,
      score: Math.max(0, score)
    };
  }

  /**
   * Analyse et sugg√®re des am√©liorations pour les sc√©narios strat√©giques
   */
  analyzeStrategicScenarios(scenarios: StrategicScenario[], riskSources: RiskSource[], events: DreadedEvent[]): ValidationResult {
    const errors: AISuggestion[] = [];
    const warnings: AISuggestion[] = [];
    const suggestions: AISuggestion[] = [];
    let score = 100;

    // Matrice de couverture
    const coverageMatrix = new Map<string, Set<string>>();
    scenarios.forEach(scenario => {
      if (!coverageMatrix.has(scenario.riskSourceId)) {
        coverageMatrix.set(scenario.riskSourceId, new Set());
      }
      coverageMatrix.get(scenario.riskSourceId)?.add(scenario.dreadedEventId);
    });

    // V√©rification de la couverture
    riskSources.forEach(source => {
      const coveredEvents = coverageMatrix.get(source.id)?.size || 0;
      if (coveredEvents === 0) {
        warnings.push({
          id: `rs-no-scenarios-${source.id}`,
          type: 'warning',
          title: `Source de risque non exploit√©e : ${source.name}`,
          description: 'Cette source de risque n\'est associ√©e √† aucun sc√©nario strat√©gique.',
          priority: 'medium',
          category: 'scenario-coverage',
          source: 'ebios-rm'
        });
        score -= 10;
      }
    });

    // Analyse des niveaux de risque
    const highRiskScenarios = scenarios.filter(s => {
      const event = events.find(e => e.id === s.dreadedEventId);
      if (event) {
        const riskLevel = EbiosUtils.calculateRiskLevel(event.gravity, s.likelihood);
        return riskLevel === 'critical' || riskLevel === 'high';
      }
      return false;
    });

    if (highRiskScenarios.length > scenarios.length * 0.7) {
      warnings.push({
        id: 'too-many-high-risks',
        type: 'warning',
        title: 'Trop de sc√©narios √† risque √©lev√©',
        description: 'Plus de 70% de vos sc√©narios pr√©sentent un risque √©lev√©. V√©rifiez la calibration de vos cotations.',
        priority: 'medium',
        category: 'risk-calibration',
        source: 'expert-knowledge'
      });
    }

    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      suggestions,
      score: Math.max(0, score)
    };
  }

  /**
   * G√©n√®re de l'aide contextuelle pour un atelier donn√©
   */
  getContextualHelp(workshopId: number, currentData?: any): ContextualHelp {
    const helpContent: Record<number, ContextualHelp> = {
      1: {
        title: 'Atelier 1 : Cadrage et √âv√©nements Redout√©s',
        content: 'Identifiez vos valeurs m√©tier et les √©v√©nements redout√©s qui pourraient les affecter.',
        examples: [
          'Valeur m√©tier : "Chiffre d\'affaires" - Impact financier direct',
          '√âv√©nement redout√© : "Atteinte √† la confidentialit√© des donn√©es clients"',
          'Liaison : Perte de confiance ‚Üí Baisse du chiffre d\'affaires'
        ],
        bestPractices: [
          'Limitez-vous √† 3-7 valeurs m√©tier principales',
          'Formulez les √©v√©nements redout√©s comme des impacts n√©gatifs',
          'Assurez-vous que chaque valeur m√©tier est couverte par au moins un √©v√©nement',
          'Cotez la gravit√© selon l\'√©chelle ANSSI (1-4)'
        ],
        anssiReferences: [
          'Guide EBIOS Risk Manager - Section 3.1',
          'M√©thode EBIOS 2010 - √âtude des enjeux',
          'ISO 27005 - √âtablissement du contexte'
        ]
      },
      2: {
        title: 'Atelier 2 : Sources de Risque',
        content: 'Identifiez qui pourrait s\'int√©resser √† vos valeurs m√©tier et comment.',
        examples: [
          'Cybercriminels ‚Üí Motivation financi√®re ‚Üí Donn√©es clients',
          'Concurrents ‚Üí Espionnage industriel ‚Üí Secrets techniques',
          'Hacktivistes ‚Üí Protestation ‚Üí Image de marque'
        ],
        bestPractices: [
          'Utilisez la taxonomie EBIOS RM (7 cat√©gories)',
          'Caract√©risez expertise, ressources et motivation',
          '√âvaluez la pertinence pour votre organisation',
          'Ne n√©gligez pas les menaces internes'
        ],
        anssiReferences: [
          'Guide EBIOS Risk Manager - Section 3.2',
          'ANSSI - Panorama de la cybermenace',
          'ENISA Threat Landscape'
        ]
      },
      3: {
        title: 'Atelier 3 : Sc√©narios Strat√©giques',
        content: 'Croisez sources de risque et √©v√©nements redout√©s pour construire des sc√©narios.',
        examples: [
          'Cybercriminels + Atteinte confidentialit√© ‚Üí Ransomware',
          'Insider + Perte int√©grit√© ‚Üí Sabotage de donn√©es',
          '√âtat + Espionnage ‚Üí APT cibl√©e'
        ],
        bestPractices: [
          'Un sc√©nario = 1 source de risque + 1 √©v√©nement redout√©',
          'D√©crivez le chemin d\'attaque logique',
          'Cotez la vraisemblance selon les capacit√©s de la source',
          'Priorisez selon la matrice de risque ANSSI'
        ],
        anssiReferences: [
          'Guide EBIOS Risk Manager - Section 3.3',
          'MITRE ATT&CK Framework',
          'ANSSI - Matrice de risque'
        ]
      }
    };

    return helpContent[workshopId] || {
      title: 'Aide EBIOS RM',
      content: 'Consultez la documentation ANSSI pour plus d\'informations.',
      examples: [],
      bestPractices: [],
      anssiReferences: []
    };
  }

  /**
   * Sugg√®re des mesures de s√©curit√© bas√©es sur les sc√©narios
   */
  suggestSecurityMeasures(scenarios: StrategicScenario[], existingMeasures: SecurityMeasure[] = []): AISuggestion[] {
    const suggestions: AISuggestion[] = [];
    const existingMeasureTypes = new Set(existingMeasures.map(m => m.type));

    // Suggestions bas√©es sur les sc√©narios √† haut risque
    const highRiskScenarios = scenarios.filter(s => s.riskLevel === 'high' || s.riskLevel === 'critical');
    
    if (highRiskScenarios.length > 0 && !existingMeasureTypes.has('detective' as any)) {
      suggestions.push({
        id: 'measure-technical',
        type: 'suggestion',
        title: 'Mesures techniques recommand√©es',
        description: 'Impl√©mentez des contr√¥les techniques pour r√©duire la vraisemblance des sc√©narios critiques.',
        actionText: 'Ajouter des mesures techniques',
        priority: 'high',
        category: 'security-measures',
        relatedData: {
          type: 'technical',
          examples: ['Antivirus', 'Pare-feu', 'Chiffrement', 'Authentification forte']
        },
        source: 'iso27005'
      });
    }

    return suggestions;
  }

  /**
   * G√©n√®re un score de maturit√© EBIOS RM global
   */
  calculateMaturityScore(data: {
    businessValues: BusinessValue[];
    supportingAssets: SupportingAsset[];
    riskSources: RiskSource[];
    dreadedEvents: DreadedEvent[];
    strategicScenarios: StrategicScenario[];
    securityMeasures?: SecurityMeasure[];
  }): {
    overallScore: number;
    workshopScores: Record<number, number>;
    recommendations: AISuggestion[];
  } {
    const recommendations: AISuggestion[] = [];
    
    // Calcul des scores par atelier
    const bvValidation = this.validateSupportingAssets(data.supportingAssets, data.businessValues);
    const deValidation = this.validateDreadedEvents(data.dreadedEvents, data.businessValues);
    const ssValidation = this.analyzeStrategicScenarios(data.strategicScenarios, data.riskSources, data.dreadedEvents);
    
    const workshopScores = {
      1: Math.min(100, (data.businessValues.length * 20) + (data.dreadedEvents.length * 15)),
      2: Math.min(100, data.riskSources.length * 25),
      3: ssValidation.score,
      4: data.strategicScenarios.length > 0 ? 75 : 0, // Placeholder pour l'atelier 4
      5: data.securityMeasures ? Math.min(100, data.securityMeasures.length * 20) : 0
    };

    const overallScore = Object.values(workshopScores).reduce((sum, score) => sum + score, 0) / 5;

    // Recommandations g√©n√©rales
    if (overallScore < 60) {
      recommendations.push({
        id: 'maturity-low',
        type: 'warning',
        title: 'Maturit√© EBIOS RM insuffisante',
        description: 'Votre analyse n√©cessite des am√©liorations significatives pour √™tre conforme aux recommandations ANSSI.',
        priority: 'critical',
        category: 'maturity',
        source: 'anssi'
      });
    }

    return {
      overallScore,
      workshopScores,
      recommendations
    };
  }
}

export const aiAssistant = new AIAssistantService(); 