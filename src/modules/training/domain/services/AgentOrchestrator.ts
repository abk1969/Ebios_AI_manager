/**
 * üé≠ ORCHESTRATEUR D'AGENTS IA EBIOS RM
 * G√®re la progression entre les ateliers et coordonne les agents sp√©cialis√©s
 */

import { EbiosWorkshopAgent, WorkshopProgress } from '../agents/EbiosWorkshopAgent';
import { ResponseValidationService } from './ResponseValidationService';

// üéØ INTERFACE POUR R√âPONSE AGENTIQUE STRUCTUR√âE
export interface AgentResponseData {
  text: string; // Le message principal
  type: 'text' | 'action_suggestions' | 'quiz' | 'info_card' | 'progress_update' | 'workshop_transition';
  actions?: AgentAction[]; // Actions structur√©es
  progressUpdate?: {
    score: number;
    workshopId: number;
    currentStep?: number;
    completionPercentage?: number;
  };
  quiz?: {
    question: string;
    options: string[];
    correctAnswer: number;
    explanation: string;
  };
  infoCard?: {
    title: string;
    content: string;
    imageUrl?: string;
    resources?: string[];
  };
  metadata?: {
    confidence: number;
    sources: string[];
    timestamp: Date;
    validationScore?: number;
    riskLevel?: string;
    expertPersona?: string;
    adaptationLevel?: string;
    nextRecommendations?: string[];
    fallbackUsed?: boolean;
    workshopStep?: string;
    nextStructuralAction?: string;
    completionPercentage?: number;
    structuredGuidance?: string;
  };
}

export interface AgentAction {
  id: string;
  label: string;
  payload: string;
  type: 'primary' | 'secondary' | 'success' | 'warning' | 'info';
  icon?: string;
}

export interface TrainingSession {
  id: string;
  learnerId: string;
  caseStudyId: string;
  currentWorkshop: number;
  overallProgress: number;
  startedAt: Date;
  lastActivity: Date;
  workshopProgresses: Record<number, WorkshopProgress>;
}

export interface CaseStudyContext {
  id: string;
  organization: string;
  description: string;
  sector: string;
  size: string;
  specificities: string[];
  realData: {
    employees: number;
    beds?: number;
    patients?: number;
    systems: string[];
    regulations: string[];
  };
}

export class AgentOrchestrator {
  private agents: Map<number, EbiosWorkshopAgent> = new Map();
  private currentSession: TrainingSession | null = null;
  private validationService: ResponseValidationService;
  private caseStudyContext: CaseStudyContext;

  // üîÑ SYST√àME ANTI-BOUCLE AVANC√â
  private conversationHistory: Map<string, string[]> = new Map();
  private responsePatterns: Map<string, number> = new Map();
  private lastResponses: string[] = [];
  private contextualResponses: Map<string, Set<string>> = new Map();
  private userIntentHistory: string[] = [];

  constructor() {
    // Initialisation du service de validation critique
    this.validationService = ResponseValidationService.getInstance();

    // Cas d'√©tude par d√©faut : CHU M√©tropolitain
    this.caseStudyContext = {
      id: 'chu_metropolitan_2024',
      organization: 'CHU M√©tropolitain',
      description: 'Centre Hospitalier Universitaire de 1200 lits desservant 800 000 habitants',
      sector: 'Sant√©',
      size: 'Grande organisation (4500 employ√©s)',
      specificities: [
        'Donn√©es de sant√© sensibles (RGPD)',
        '√âquipements m√©dicaux connect√©s',
        'Continuit√© de service critique',
        'R√©glementation HDS stricte',
        'Recherche m√©dicale'
      ],
      realData: {
        employees: 4500,
        beds: 1200,
        patients: 50000, // par an
        systems: [
          'SIH (Syst√®me d\'Information Hospitalier)',
          'PACS (Picture Archiving and Communication System)',
          '√âquipements m√©dicaux IoT',
          'Syst√®me de gestion des identit√©s',
          'R√©seau de t√©l√©m√©decine'
        ],
        regulations: ['RGPD', 'HDS', 'ISO 27001', 'Directive NIS2']
      }
    };
  }

  /**
   * üöÄ Initialiser une session de formation
   */
  async initializeSession(learnerId: string, sessionId: string): Promise<TrainingSession> {
    // Initialiser tous les agents pour les 5 ateliers
    for (let i = 1; i <= 5; i++) {
      this.agents.set(i, new EbiosWorkshopAgent(i, this.caseStudyContext));
    }

    this.currentSession = {
      id: sessionId,
      learnerId,
      caseStudyId: this.caseStudyContext.id,
      currentWorkshop: 1,
      overallProgress: 0,
      startedAt: new Date(),
      lastActivity: new Date(),
      workshopProgresses: {
        1: { currentStep: 0, completedSteps: [], validatedDeliverables: [], score: 0, timeSpent: 0 },
        2: { currentStep: 0, completedSteps: [], validatedDeliverables: [], score: 0, timeSpent: 0 },
        3: { currentStep: 0, completedSteps: [], validatedDeliverables: [], score: 0, timeSpent: 0 },
        4: { currentStep: 0, completedSteps: [], validatedDeliverables: [], score: 0, timeSpent: 0 },
        5: { currentStep: 0, completedSteps: [], validatedDeliverables: [], score: 0, timeSpent: 0 }
      }
    };

    return this.currentSession;
  }

  /**
   * üéØ Obtenir le message d'accueil avec plan d'action concret
   */
  getWelcomeMessage(): string {
    if (!this.currentSession) {
      throw new Error('Session non initialis√©e');
    }

    return `üéì **Bonjour ! Je suis Dr. Sophie Cadrage, votre formatrice EBIOS RM.**

Je vais vous accompagner personnellement dans l'analyse des risques du **${this.caseStudyContext.organization}**.

üìã **VOTRE MISSION AUJOURD'HUI :**
Nous allons analyser ensemble les risques cyber de ce CHU de 1200 lits qui dessert 800 000 habitants.

üéØ **PLAN D'ACTION IMM√âDIAT :**

**√âTAPE 1** - D√©couverte du contexte (5 min)
‚Üí Je vais vous pr√©senter le CHU et ses enjeux
‚Üí Vous comprendrez pourquoi cette analyse est critique

**√âTAPE 2** - Identification des biens supports (15 min)
‚Üí Nous identifierons ensemble les syst√®mes critiques
‚Üí SIH, √©quipements m√©dicaux, donn√©es patients...

**√âTAPE 3** - √âvaluation de la criticit√© (10 min)
‚Üí Nous √©valuerons l'impact de chaque bien support
‚Üí Matrice de criticit√© personnalis√©e

üöÄ **COMMEN√áONS MAINTENANT !**

Tapez **"GO"** ou cliquez sur le bouton ci-dessous pour que je vous pr√©sente le contexte du CHU m√©tropolitain.

Ou posez-moi directement une question si vous pr√©f√©rez !`;
  }

  /**
   * üìç Commencer un atelier sp√©cifique
   */
  startWorkshop(workshopNumber: number): string {
    if (!this.currentSession) {
      throw new Error('Session non initialis√©e');
    }

    // V√©rifier les pr√©requis
    if (workshopNumber > 1) {
      const previousWorkshop = this.currentSession.workshopProgresses[workshopNumber - 1];
      if (previousWorkshop.score < 70) {
        return `‚ö†Ô∏è **Pr√©requis non valid√©s**
        
Vous devez d'abord terminer l'Atelier ${workshopNumber - 1} avec un score minimum de 70% avant de pouvoir acc√©der √† l'Atelier ${workshopNumber}.

Score actuel Atelier ${workshopNumber - 1} : ${previousWorkshop.score}%

Souhaitez-vous reprendre l'Atelier ${workshopNumber - 1} ?`;
      }
    }

    this.currentSession.currentWorkshop = workshopNumber;
    const agent = this.agents.get(workshopNumber);
    
    if (!agent) {
      throw new Error(`Agent pour l'atelier ${workshopNumber} non trouv√©`);
    }

    return agent.generateMessage('welcome', {
      caseStudyData: this.caseStudyContext
    });
  }

  /**
   * üí¨ TRAITEMENT INTELLIGENT FULL-AGENTIC - VERSION ANSSI EXPERT
   */
  async processLearnerMessage(message: string): Promise<AgentResponseData> {
    if (!this.currentSession) {
      throw new Error('Session non initialis√©e');
    }

    const currentWorkshop = this.currentSession.currentWorkshop;
    const agent = this.agents.get(currentWorkshop);

    if (!agent) {
      throw new Error(`Agent pour l'atelier ${currentWorkshop} non trouv√©`);
    }

    // üîÑ V√âRIFICATION ANTI-BOUCLE
    if (this.isLoopDetected(message)) {
      return this.generateAntiLoopResponse(message);
    }

    // üß† ANALYSE CONTEXTUELLE AVANC√âE
    const context = this.buildAdvancedContext(message);

    // üéØ G√âN√âRATION DE R√âPONSE EXPERTE ANSSI
    const response = await this.generateExpertAgenticResponse(message, agent, context);

    // üìù ENREGISTREMENT POUR ANTI-BOUCLE
    this.recordInteraction(message, response.text);

    // üìä MISE √Ä JOUR INTELLIGENTE DE LA PROGRESSION
    await this.updateIntelligentProgress(message, response);

    // üîÑ ADAPTATION DYNAMIQUE DU PARCOURS
    await this.adaptLearningPath(response);

    this.currentSession.lastActivity = new Date();
    return response;
  }

  /**
   * üß† G√©n√©rer une r√©ponse contextuelle intelligente - VERSION FULL-AGENTIC
   */
  private generateContextualResponse = async (
    message: string,
    _agent: EbiosWorkshopAgent
  ): Promise<AgentResponseData> => {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    // Analyser l'intention du message
    const intent = this._analyzeMessageIntent(message);

    // G√©n√©rer une r√©ponse structur√©e bas√©e sur l'intention
    switch (intent.type) {
      case 'start_training':
        return {
          text: this.getContextPresentationMessage(),
          type: 'text',
          actions: [
            { id: '1', label: 'üè• D√©couvrir le CHU', payload: 'Pr√©sentez-moi le CHU', type: 'primary', icon: 'üè•' },
            { id: '2', label: 'üìã Atelier 1 direct', payload: 'Commen√ßons l\'atelier 1', type: 'secondary', icon: 'üìã' },
            { id: '3', label: 'üîç Identifier les biens', payload: 'Identifions les biens supports', type: 'info', icon: 'üîç' },
            { id: '4', label: '‚ùì Plan personnalis√©', payload: 'Que dois-je faire ?', type: 'warning', icon: '‚ùì' }
          ],
          metadata: {
            confidence: 0.9,
            sources: ['EBIOS RM Guide', 'CHU Case Study'],
            timestamp: new Date()
          }
        };
      case 'chu_context':
        return {
          text: this.getCHUAnalysisMessage(),
          type: 'text',
          actions: [
            { id: '1', label: 'Identifions les biens supports', payload: 'Identifions les biens supports', type: 'primary', icon: 'üîç' },
            { id: '2', label: 'Questions sur le CHU', payload: 'J\'ai des questions sur le CHU', type: 'secondary', icon: '‚ùì' }
          ],
          metadata: {
            confidence: 0.9,
            sources: ['CHU Case Study'],
            timestamp: new Date()
          }
        };
      case 'start_workshop_1':
        return {
          text: this.getWorkshop1GuidanceMessage(),
          type: 'text',
          actions: [
            { id: '1', label: 'Question sur l\'atelier 1', payload: 'J\'ai une question sur l\'atelier 1', type: 'secondary', icon: '‚ùì' },
            { id: '2', label: 'Passons √† l\'√©tape suivante', payload: '√âtape suivante', type: 'primary', icon: '‚û°Ô∏è' }
          ],
          metadata: {
            confidence: 0.9,
            sources: ['EBIOS RM Guide'],
            timestamp: new Date()
          }
        };
      case 'identify_assets':
        return {
          text: this.getAssetsIdentificationMessage(),
          type: 'text',
          actions: [
            { id: '1', label: 'Classement des biens supports', payload: 'Mon classement des biens supports est...', type: 'primary', icon: 'üìä' },
            { id: '2', label: 'Questions sur les biens supports', payload: 'J\'ai des questions sur les biens supports', type: 'secondary', icon: '‚ùì' }
          ],
          metadata: {
            confidence: 0.9,
            sources: ['EBIOS RM Guide'],
            timestamp: new Date()
          }
        };
      case 'analyze_threats':
        return {
          text: this.getThreatsAnalysisMessage(),
          type: 'text',
          actions: [
            { id: '1', label: 'Quelle est la menace la plus √©lev√©e ?', payload: 'La menace la plus √©lev√©e est...', type: 'primary', icon: 'üö®' },
            { id: '2', label: 'Questions sur les menaces', payload: 'J\'ai des questions sur les menaces', type: 'secondary', icon: '‚ùì' }
          ],
          metadata: {
            confidence: 0.9,
            sources: ['EBIOS RM Guide'],
            timestamp: new Date()
          }
        };
      case 'request_help':
        return this.generateGuidanceResponse(message, _agent, progress); // R√©utiliser la fonction de guidage
      case 'request_example':
        return {
          text: "Voici un exemple concret li√© √† votre question : [Exemple d√©taill√© ici]", // Placeholder
          type: 'info_card',
          infoCard: {
            title: "Exemple Concret",
            content: "Pour l'identification des biens supports, imaginez une attaque par ransomware sur le SIH du CHU. Les biens supports critiques seraient le SIH lui-m√™me, les donn√©es patients, et les √©quipements m√©dicaux connect√©s qui d√©pendent du SIH pour fonctionner.",
            resources: ["Cas d'√©tude CHU", "Atelier 1 EBIOS RM"]
          },
          metadata: {
            confidence: 0.9,
            sources: ['EBIOS RM Guide'],
            timestamp: new Date()
          }
        };
      case 'evaluate_progress':
        return this.generateEvaluationResponse(message, _agent, progress); // R√©utiliser la fonction d'√©valuation
      case 'question':
        return this.generateQuestionResponse(message, _agent, intent.topic || 'g√©n√©ral');
      case 'request_guidance':
        return this.generateGuidanceResponse(message, _agent, progress);
      case 'submit_work':
        return this.generateEvaluationResponse(message, _agent, progress);
      case 'request_next_step':
        return this.generateNextStepResponse(_agent, progress);
      default:
        return this.generateDefaultResponse(message, _agent);
    }
  };

  /**
   * üéØ G√©n√©rer une r√©ponse pour une question
   */
  private generateQuestionResponse = (message: string, agent: EbiosWorkshopAgent, topic: string): AgentResponseData => {
    const expertAnswer = agent.generateMessage('question', {
      userInput: message,
      caseStudyData: this.caseStudyContext,
      topic: topic
    });
    const relatedQuestions = this.getRelatedQuestions(topic);

    return {
      text: expertAnswer,
      type: 'text',
      actions: relatedQuestions.map((q, index) => ({
        id: `q${index}`,
        label: q,
        payload: q,
        type: 'secondary' as const,
        icon: 'üí°'
      })),
      metadata: {
        confidence: 0.8,
        sources: ['EBIOS RM Expert'],
        timestamp: new Date()
      }
    };
  };


  /**
   * üß≠ G√©n√©rer une r√©ponse de guidage
   */
  private generateGuidanceResponse = (message: string, agent: EbiosWorkshopAgent, progress: WorkshopProgress): AgentResponseData => {
    const guidanceText = agent.generateMessage('guidance', {
      userInput: message,
      progress,
      caseStudyData: this.caseStudyContext
    });

    return {
      text: guidanceText,
      type: 'action_suggestions',
      actions: [
        { id: 'step', label: 'Continuons √©tape par √©tape', payload: 'Guidez-moi √©tape par √©tape', type: 'primary', icon: 'üë£' },
        { id: 'question', label: 'Posez-moi une question sp√©cifique', payload: 'J\'ai une question sp√©cifique', type: 'secondary', icon: '‚ùì' },
        { id: 'example', label: 'Montrez-moi un exemple', payload: 'Montrez-moi un exemple concret', type: 'info', icon: 'üí°' }
      ],
      metadata: {
        confidence: 0.85,
        sources: ['Workshop Agent'],
        timestamp: new Date()
      }
    };
  };

  /**
   * üìä G√©n√©rer une r√©ponse d'√©valuation
   */
  private generateEvaluationResponse = (message: string, agent: EbiosWorkshopAgent, progress: WorkshopProgress): AgentResponseData => {
    const evaluation = agent.evaluateProgress(message, this.getCurrentStep());

    const response: AgentResponseData = {
      text: evaluation.feedback,
      type: evaluation.canProceed ? 'progress_update' : 'text',
      actions: evaluation.suggestions.map((s, index) => ({
        id: `eval${index}`,
        label: s,
        payload: s,
        type: evaluation.canProceed ? 'success' : 'warning' as const,
        icon: evaluation.canProceed ? '‚úÖ' : 'üîÑ'
      })),
      metadata: {
        confidence: evaluation.score / 100,
        sources: ['Evaluation Agent'],
        timestamp: new Date()
      }
    };

    if (evaluation.canProceed) {
      response.progressUpdate = {
        score: Math.max(progress.score, evaluation.score),
        workshopId: this.currentSession!.currentWorkshop,
        currentStep: progress.currentStep + 1,
        completionPercentage: this.calculateOverallProgress()
      };
    }

    return response;
  };

  /**
   * ‚û°Ô∏è G√©n√©rer une r√©ponse pour l'√©tape suivante
   */
  private generateNextStepResponse = (agent: EbiosWorkshopAgent, progress: WorkshopProgress): AgentResponseData => {
    const nextActionData = agent.getNextAction(progress);

    return {
      text: nextActionData.message,
      type: 'workshop_transition',
      actions: nextActionData.options.map((option, index) => ({
        id: `next${index}`,
        label: option,
        payload: option,
        type: 'primary' as const,
        icon: '‚ñ∂Ô∏è'
      })),
      progressUpdate: {
        score: progress.score,
        workshopId: this.currentSession!.currentWorkshop,
        completionPercentage: this.calculateOverallProgress()
      },
      metadata: {
        confidence: 0.9,
        sources: ['Workshop Navigation'],
        timestamp: new Date()
      }
    };
  };

  /**
   * üîÑ G√©n√©rer une r√©ponse par d√©faut
   */
  private generateDefaultResponse = (message: string, agent: EbiosWorkshopAgent): AgentResponseData => {
    const defaultText = agent.generateMessage('guidance', {
      userInput: message,
      caseStudyData: this.caseStudyContext
    });

    return {
      text: defaultText,
      type: 'action_suggestions',
      actions: [
        { id: 'clarify', label: 'Pouvez-vous pr√©ciser votre question ?', payload: 'Pouvez-vous pr√©ciser ?', type: 'secondary', icon: '‚ùì' },
        { id: 'example', label: 'Souhaitez-vous un exemple ?', payload: 'Montrez-moi un exemple', type: 'info', icon: 'üí°' },
        { id: 'practice', label: 'Passons √† la pratique', payload: 'Exercice pratique', type: 'primary', icon: 'üéØ' }
      ],
      metadata: {
        confidence: 0.6,
        sources: ['Default Handler'],
        timestamp: new Date()
      }
    };
  };

  /**
   * üè• Message de pr√©sentation du contexte CHU
   */
  private getContextPresentationMessage = (): string => {
    return `üè• **PR√âSENTATION DU CHU M√âTROPOLITAIN**

Parfait ! Laissez-moi vous pr√©senter notre cas d'√©tude :

**üìä PROFIL DE L'ORGANISATION :**
‚Ä¢ **Nom :** CHU M√©tropolitain de la r√©gion
‚Ä¢ **Taille :** 1 200 lits, 4 500 employ√©s
‚Ä¢ **Population :** 800 000 habitants desservis
‚Ä¢ **Activit√©s :** Soins, urgences, recherche m√©dicale

**üèóÔ∏è INFRASTRUCTURE CRITIQUE :**
‚Ä¢ **SIH :** Syst√®me d'Information Hospitalier (Oracle Health)
‚Ä¢ **PACS :** Imagerie m√©dicale (50 To de donn√©es)
‚Ä¢ **IoT m√©dical :** 2 500 √©quipements connect√©s
‚Ä¢ **R√©seau :** Fibre optique, WiFi patients/staff

**‚öñÔ∏è CONTRAINTES R√âGLEMENTAIRES :**
‚Ä¢ RGPD (donn√©es de sant√© sensibles)
‚Ä¢ Certification HDS (H√©bergement Donn√©es Sant√©)
‚Ä¢ Directive NIS2 (Op√©rateur de Services Essentiels)

**üéØ ENJEUX BUSINESS CRITIQUES :**
‚Ä¢ Continuit√© des soins 24h/24
‚Ä¢ Protection des donn√©es patients
‚Ä¢ Recherche m√©dicale (propri√©t√© intellectuelle)
‚Ä¢ R√©putation et confiance publique

**‚û°Ô∏è PROCHAINE √âTAPE :**
Maintenant que vous connaissez le contexte, tapez **"Identifions les biens supports"** pour commencer l'analyse EBIOS RM !

Des questions sur ce CHU avant de continuer ?`;
  };

  /**
   * üéØ Message d'analyse du CHU
   */
  private getCHUAnalysisMessage = (): string => {
    return `üîç **ANALYSE APPROFONDIE DU CHU**

Excellente initiative ! Analysons ensemble les sp√©cificit√©s de ce CHU :

**üö® POINTS DE VULN√âRABILIT√â IDENTIFI√âS :**

1Ô∏è‚É£ **√âquipements m√©dicaux legacy**
   ‚Üí IRM de 2018 sans patch de s√©curit√©
   ‚Üí Respirateurs connect√©s avec mots de passe par d√©faut
   ‚Üí Pompes √† perfusion sur r√©seau non segment√©

2Ô∏è‚É£ **Donn√©es ultra-sensibles**
   ‚Üí 50 000 dossiers patients/an
   ‚Üí Recherche oncologique (donn√©es g√©n√©tiques)
   ‚Üí Imagerie m√©dicale haute r√©solution

3Ô∏è‚É£ **Contraintes op√©rationnelles**
   ‚Üí Impossible d'arr√™ter les syst√®mes critiques
   ‚Üí Personnel non-technique utilisant l'IT
   ‚Üí Acc√®s multiples (m√©decins, externes, patients)

**üéØ EXERCICE PRATIQUE :**
Selon vous, quel serait l'impact d'une cyberattaque qui :
- Chiffre le SIH pendant 48h ?
- Vole les donn√©es de 10 000 patients ?
- Paralyse les √©quipements de r√©animation ?

**‚û°Ô∏è VOTRE MISSION :**
Tapez votre analyse de l'impact le plus critique, puis nous passerons √† l'identification des biens supports !`;
  };

  /**
   * üìã Message de guidage Atelier 1
   */
  private getWorkshop1GuidanceMessage = (): string => {
    return `üìã **ATELIER 1 : CADRAGE ET SOCLE DE S√âCURIT√â**

Parfait ! Entrons dans le vif du sujet avec l'Atelier 1.

**üéØ OBJECTIF DE CET ATELIER :**
D√©finir le p√©rim√®tre d'√©tude et identifier les biens supports critiques du CHU.

**üìù √âTAPES QUE NOUS ALLONS SUIVRE :**

**√âTAPE 1.1 - P√©rim√®tre d'√©tude (5 min)**
‚úÖ Organisation : CHU M√©tropolitain
‚úÖ Missions : Soins, urgences, recherche
‚úÖ P√©rim√®tre : Syst√®mes d'information + √©quipements m√©dicaux

**√âTAPE 1.2 - Biens supports primaires (15 min)**
üîÑ EN COURS ‚Üí Identification des biens essentiels
- SIH (Syst√®me d'Information Hospitalier)
- Donn√©es patients
- √âquipements m√©dicaux connect√©s
- Personnel m√©dical

**√âTAPE 1.3 - Biens supports de soutien (10 min)**
‚è≥ √Ä VENIR ‚Üí Infrastructure technique
‚è≥ √Ä VENIR ‚Üí Locaux et s√©curit√© physique

**üöÄ ACTION IMM√âDIATE :**
Commen√ßons par l'√âTAPE 1.2.

**QUESTION CONCR√àTE :**
"Dans ce CHU, quel syst√®me vous semble le plus critique : le SIH qui g√®re tous les dossiers patients, ou les √©quipements de r√©animation qui maintiennent les patients en vie ?"

Donnez-moi votre r√©ponse avec votre raisonnement !`;
  };

  /**
   * üèóÔ∏è Message d'identification des biens supports
   */
  private getAssetsIdentificationMessage = (): string => {
    return `üèóÔ∏è **IDENTIFICATION DES BIENS SUPPORTS - CHU M√âTROPOLITAIN**

Excellente question ! C'est le c≈ìur de l'Atelier 1.

**üìä M√âTHODE EBIOS RM APPLIQU√âE :**

**üéØ BIENS SUPPORTS PRIMAIRES (Mission critique) :**

1Ô∏è‚É£ **SIH - Syst√®me d'Information Hospitalier**
   ‚Ä¢ Criticit√© : VITALE ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
   ‚Ä¢ Impact arr√™t : Paralysie totale des soins
   ‚Ä¢ Donn√©es : 50 000 patients/an

2Ô∏è‚É£ **√âquipements de r√©animation**
   ‚Ä¢ Criticit√© : VITALE ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
   ‚Ä¢ Impact arr√™t : D√©c√®s patients
   ‚Ä¢ Quantit√© : 120 lits de r√©a

3Ô∏è‚É£ **PACS - Imagerie m√©dicale**
   ‚Ä¢ Criticit√© : IMPORTANTE ‚≠ê‚≠ê‚≠ê‚≠ê
   ‚Ä¢ Impact arr√™t : Retard diagnostics
   ‚Ä¢ Volume : 50 To d'images

**üîß BIENS SUPPORTS DE SOUTIEN :**

4Ô∏è‚É£ **Infrastructure r√©seau**
   ‚Ä¢ Criticit√© : IMPORTANTE ‚≠ê‚≠ê‚≠ê‚≠ê
   ‚Ä¢ Impact arr√™t : Isolement des services

5Ô∏è‚É£ **Personnel m√©dical**
   ‚Ä¢ Criticit√© : VITALE ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
   ‚Ä¢ Impact absence : Arr√™t des soins

**üéØ EXERCICE PRATIQUE :**
Classez ces 5 biens supports par ordre de criticit√© pour la continuit√© des soins.

**‚û°Ô∏è PROCHAINE √âTAPE :**
Une fois votre classement fait, nous passerons √† l'√©valuation des interd√©pendances !

Votre classement ?`;
  };

  /**
   * ‚ö†Ô∏è Message d'analyse des menaces
   */
  private getThreatsAnalysisMessage = (): string => {
    return `‚ö†Ô∏è **ANALYSE DES MENACES - SECTEUR SANT√â**

Excellente transition ! Nous entrons dans l'Atelier 2.

**üéØ MENACES SP√âCIFIQUES AU CHU M√âTROPOLITAIN :**

**üî• MENACES CYBER CRITIQUES :**

1Ô∏è‚É£ **Ransomware hospitalier**
   ‚Ä¢ Probabilit√© : TR√àS √âLEV√âE üî¥
   ‚Ä¢ Impact : Paralysie totale 48-72h
   ‚Ä¢ Exemple r√©cent : CHU de Rouen (2019)

2Ô∏è‚É£ **Vol de donn√©es patients**
   ‚Ä¢ Probabilit√© : √âLEV√âE üü†
   ‚Ä¢ Impact : Amende RGPD + r√©putation
   ‚Ä¢ Volume expos√© : 50 000 dossiers

3Ô∏è‚É£ **Sabotage √©quipements m√©dicaux**
   ‚Ä¢ Probabilit√© : MOYENNE üü°
   ‚Ä¢ Impact : D√©c√®s patients possibles
   ‚Ä¢ Cible : Respirateurs, pompes

**üë• PROFILS D'ATTAQUANTS :**

üè¥‚Äç‚ò†Ô∏è **Cybercriminels organis√©s**
‚Ä¢ Motivation : Financi√®re (ran√ßon)
‚Ä¢ Capacit√© : √âlev√©e
‚Ä¢ Cible : SIH, donn√©es

üïµÔ∏è **Espions industriels**
‚Ä¢ Motivation : Recherche m√©dicale
‚Ä¢ Capacit√© : Tr√®s √©lev√©e
‚Ä¢ Cible : Propri√©t√© intellectuelle

üò§ **Employ√© malveillant**
‚Ä¢ Motivation : Vengeance/argent
‚Ä¢ Capacit√© : Acc√®s privil√©gi√©
‚Ä¢ Cible : Donn√©es patients

**üéØ QUESTION STRAT√âGIQUE :**
Selon vous, quelle menace repr√©sente le risque le plus √©lev√© pour ce CHU ?

Argumentez votre choix avec l'impact potentiel !`;
  };

  /**
   * ‚ùì Obtenir des questions li√©es au sujet
   */
  private getRelatedQuestions = (topic: string): string[] => {
    const relatedQuestions: Record<string, string[]> = {
      'biens supports': [
        'Comment √©valuer la criticit√© des biens supports ?',
        'Quelles sont les interd√©pendances √† identifier ?',
        'Comment cartographier les biens supports du CHU ?'
      ],
      'menaces': [
        'Quelles sont les motivations des attaquants ?',
        'Comment √©valuer les capacit√©s des sources de menaces ?',
        'Quels sont les vecteurs d\'attaque sp√©cifiques au CHU ?'
      ],
      'g√©n√©ral': [
        'Guidez-moi dans l\'√©tape actuelle',
        'Montrez-moi un exemple concret',
        'Quels sont les livrables attendus ?'
      ]
    };

    return relatedQuestions[topic] || relatedQuestions['g√©n√©ral'];
  };

  /**
   * üìç Obtenir l'√©tape actuelle
   */
  private getCurrentStep = (): any => {
    // Retourner l'√©tape actuelle bas√©e sur la progression
    return {
      id: 'current',
      title: '√âtape actuelle',
      description: '√âtape en cours de l\'atelier',
      objectives: [],
      deliverables: [],
      duration: 15
    };
  };

  /**
   * üìä Obtenir le statut de la session
   */
  getSessionStatus(): {
    currentWorkshop: number;
    overallProgress: number;
    workshopProgress: WorkshopProgress;
    nextMilestone: string;
  } {
    if (!this.currentSession) {
      throw new Error('Session non initialis√©e');
    }

    const currentProgress = this.currentSession.workshopProgresses[this.currentSession.currentWorkshop];
    
    return {
      currentWorkshop: this.currentSession.currentWorkshop,
      overallProgress: this.calculateOverallProgress(),
      workshopProgress: currentProgress,
      nextMilestone: this.getNextMilestone()
    };
  }

  /**
   * üìà Calculer la progression globale
   */
  private calculateOverallProgress = (): number => {
    if (!this.currentSession) return 0;

    const totalScore = Object.values(this.currentSession.workshopProgresses)
      .reduce((sum, progress) => sum + progress.score, 0);
    
    return Math.round(totalScore / 5); // Moyenne sur 5 ateliers
  };

  /**
   * üéØ Obtenir le prochain jalon
   */
  private getNextMilestone = (): string => {
    if (!this.currentSession) return '';

    const current = this.currentSession.currentWorkshop;
    const progress = this.currentSession.workshopProgresses[current];

    if (progress.score < 70) {
      return `Terminer l'Atelier ${current}`;
    } else if (current < 5) {
      return `Commencer l'Atelier ${current + 1}`;
    } else {
      return 'Formation termin√©e !';
    }
  };

  /**
   * üß† CONSTRUCTION DU CONTEXTE AVANC√â POUR IA EXPERTE
   */
  private buildAdvancedContext(message: string): {
    learnerProfile: any;
    currentState: any;
    ebiosContext: any;
    expertLevel: string;
    nextActions: string[];
  } {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    return {
      learnerProfile: {
        currentWorkshop,
        overallProgress: this.calculateOverallProgress(),
        strengths: this.identifyLearnerStrengths(),
        weaknesses: this.identifyLearnerWeaknesses(),
        preferredLearningStyle: this.detectLearningStyle(message)
      },
      currentState: {
        workshopProgress: progress,
        timeSpent: progress.timeSpent,
        lastInteractions: this.getRecentInteractions(),
        strugglingAreas: this.identifyStrugglingAreas()
      },
      ebiosContext: {
        organization: this.caseStudyContext.organization,
        sector: this.caseStudyContext.sector,
        criticalAssets: this.caseStudyContext.realData.systems,
        regulations: this.caseStudyContext.realData.regulations,
        currentPhase: this.getCurrentEbiosPhase()
      },
      expertLevel: this.determineExpertLevel(),
      nextActions: this.generateIntelligentNextActions()
    };
  }

  /**
   * üéØ MOTEUR IA STRUCTURANT EBIOS RM - ORCHESTRATION WORKSHOP PAR WORKSHOP
   */
  private async generateExpertAgenticResponse(
    message: string,
    _agent: EbiosWorkshopAgent,
    context: any
  ): Promise<AgentResponseData> {
    console.log('üéØ G√©n√©ration r√©ponse experte pour:', message);
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const progress = context.currentState.workshopProgress;
    console.log('üìä Workshop actuel:', currentWorkshop, 'Progression:', progress);

    // üîç ANALYSE CONTEXTUELLE AVANC√âE DU MESSAGE
    const messageAnalysis = this.analyzeMessageInWorkshopContext(message, currentWorkshop, progress);
    console.log('üîç Analyse message:', messageAnalysis);

    // üéØ D√âTERMINATION DE L'ACTION IA STRUCTURANTE
    const structuralAction = this.determineStructuralAction(messageAnalysis, currentWorkshop, progress);

    // üèóÔ∏è G√âN√âRATION DE CONTENU STRUCTUR√â PAR WORKSHOP
    const structuredContent = await this.generateStructuredWorkshopContent(
      structuralAction,
      currentWorkshop,
      progress,
      context
    );

    // ‚úÖ VALIDATION CRITIQUE AVANT ENVOI
    const validationResult = this.validationService.validateResponse(
      structuredContent.content,
      {
        workshop: currentWorkshop,
        userMessage: message,
        learnerLevel: context.expertLevel,
        organizationContext: context.ebiosContext.organization
      }
    );

    // üö® FALLBACK SI NON CONFORME
    if (!validationResult.isValid) {
      return this.generateStructuredFallback(currentWorkshop, context);
    }

    // üéØ ACTIONS STRUCTUR√âES PAR √âTAPE
    const structuredActions = this.generateStructuredActions(structuralAction, currentWorkshop, progress);

    // üìä MISE √Ä JOUR PROGRESSION STRUCTUR√âE
    const progressUpdate = this.calculateStructuredProgress(structuralAction, progress);

    return {
      text: structuredContent.content,
      type: structuredContent.type,
      actions: structuredActions,
      progressUpdate: progressUpdate,
      quiz: structuredContent.quiz,
      infoCard: structuredContent.infoCard,
      metadata: {
        confidence: structuredContent.confidence,
        sources: structuredContent.sources,
        timestamp: new Date(),
        workshopStep: structuralAction.step,
        nextStructuralAction: structuralAction.nextAction,
        completionPercentage: progressUpdate.completionPercentage,
        structuredGuidance: structuralAction.guidance
      }
    };
  }

  /**
   * üìä MISE √Ä JOUR INTELLIGENTE DE LA PROGRESSION
   */
  private async updateIntelligentProgress(message: string, response: AgentResponseData): Promise<void> {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    // Analyse de la qualit√© de l'interaction
    const interactionQuality = this.assessInteractionQuality(message, response);

    // Mise √† jour adaptative du score
    const newScore = this.calculateAdaptiveScore(progress.score, interactionQuality);

    // Identification des comp√©tences acquises
    const skillsAcquired = this.identifySkillsAcquired(message, response);

    // Mise √† jour de la progression
    progress.score = newScore;
    progress.timeSpent += this.calculateInteractionTime();

    if (skillsAcquired.length > 0) {
      progress.validatedDeliverables.push(...skillsAcquired);
    }

    // D√©clenchement d'√©v√©nements de progression
    this.triggerProgressEvents(progress, interactionQuality);
  }

  /**
   * üîÑ ADAPTATION DYNAMIQUE DU PARCOURS D'APPRENTISSAGE
   */
  private async adaptLearningPath(_response: AgentResponseData): Promise<void> {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    // Analyse des difficult√©s d√©tect√©es
    const difficulties = this.detectLearningDifficulties(progress);

    // Adaptation du niveau de complexit√©
    if (difficulties.length > 0) {
      await this.simplifyNextInteractions(difficulties);
    } else if (progress.score > 85) {
      await this.increaseChallengeLevel();
    }

    // Recommandations personnalis√©es
    const personalizedRecommendations = this.generatePersonalizedRecommendations(progress);

    // Mise √† jour du parcours
    this.updateLearningPathway(personalizedRecommendations);
  }

  /**
   * üß† Analyser l'intention du message de l'apprenant
   */
  private _analyzeMessageIntent(message: string): {
    type: string;
    confidence: number;
    topic?: string;
    keywords: string[];
  } {
    const lowerMessage = message.toLowerCase().trim();

    // Mots-cl√©s pour chaque intention
    const intentPatterns = {
      start_training: ['go', 'commencer', 'd√©marrer', 'start', 'commen√ßons', 'allons-y'],
      chu_context: ['chu', 'h√¥pital', 'contexte', 'organisation', 'pr√©sent', 'd√©couvrir'],
      start_workshop_1: ['atelier 1', 'workshop 1', 'cadrage', 'socle', 'biens supports'],
      identify_assets: ['biens supports', 'assets', 'identifier', 'syst√®mes', 'sih', 'pacs'],
      analyze_threats: ['menaces', 'threats', 'risques', 'attaquants', 'cyberattaque'],
      request_help: ['aide', 'help', 'guidez', 'comment', 'que faire', 'perdu'],
      request_example: ['exemple', 'example', 'montrez', 'concret', 'illustration'],
      evaluate_progress: ['score', 'progression', '√©valuation', 'r√©sultat', 'validation'],
      question: ['?', 'pourquoi', 'comment', 'qu\'est-ce', 'quelle', 'quel'],
      request_guidance: ['guidage', '√©tape', 'suivant', 'prochaine', 'direction'],
      submit_work: ['termin√©', 'fini', 'soumis', 'validation', 'mon travail'],
      request_next_step: ['suivant', 'next', '√©tape suivante', 'continuer', 'apr√®s']
    };

    let bestMatch = { type: 'question', confidence: 0.3, keywords: [] as string[] };

    // Analyser chaque pattern
    for (const [intentType, keywords] of Object.entries(intentPatterns)) {
      const matches = keywords.filter(keyword => lowerMessage.includes(keyword));
      const confidence = matches.length / keywords.length;

      if (confidence > bestMatch.confidence) {
        bestMatch = {
          type: intentType,
          confidence,
          keywords: matches
        };
      }
    }

    // D√©terminer le topic pour les questions
    let topic = 'g√©n√©ral';
    if (bestMatch.type === 'question') {
      if (lowerMessage.includes('bien') || lowerMessage.includes('asset') || lowerMessage.includes('syst√®me')) {
        topic = 'biens supports';
      } else if (lowerMessage.includes('menace') || lowerMessage.includes('threat') || lowerMessage.includes('attaque')) {
        topic = 'menaces';
      } else if (lowerMessage.includes('atelier') || lowerMessage.includes('workshop')) {
        topic = 'atelier';
      }
    }

    return {
      type: bestMatch.type,
      confidence: Math.min(bestMatch.confidence + 0.2, 1.0), // Boost de confiance
      topic,
      keywords: bestMatch.keywords
    };
  }

  // ========================================
  // üß† M√âTHODES D'INTELLIGENCE ARTIFICIELLE AVANC√âE
  // ========================================

  /**
   * üéØ Identifier les forces de l'apprenant
   */
  private identifyLearnerStrengths(): string[] {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    const strengths: string[] = [];

    if (progress.score > 80) strengths.push('Excellente compr√©hension des concepts');
    if (progress.timeSpent < 1800) strengths.push('Apprentissage rapide'); // < 30min
    if (progress.validatedDeliverables.length > 2) strengths.push('Bonne application pratique');
    if (progress.completedSteps.length > 1) strengths.push('Progression m√©thodique');

    return strengths.length > 0 ? strengths : ['Motivation √† apprendre'];
  }

  /**
   * üéØ Identifier les faiblesses de l'apprenant
   */
  private identifyLearnerWeaknesses(): string[] {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    const weaknesses: string[] = [];

    if (progress.score < 50) weaknesses.push('Difficult√©s de compr√©hension');
    if (progress.timeSpent > 3600) weaknesses.push('Besoin de plus de temps'); // > 1h
    if (progress.validatedDeliverables.length === 0) weaknesses.push('Application pratique √† am√©liorer');
    if (progress.completedSteps.length === 0) weaknesses.push('D√©marrage difficile');

    return weaknesses;
  }

  /**
   * üéØ D√©tecter le style d'apprentissage pr√©f√©r√©
   */
  private detectLearningStyle(message: string): 'visual' | 'auditory' | 'kinesthetic' | 'reading' {
    const lowerMessage = message.toLowerCase();

    if (lowerMessage.includes('exemple') || lowerMessage.includes('montrez') || lowerMessage.includes('voir')) {
      return 'visual';
    }
    if (lowerMessage.includes('expliquez') || lowerMessage.includes('dites') || lowerMessage.includes('√©coutez')) {
      return 'auditory';
    }
    if (lowerMessage.includes('faire') || lowerMessage.includes('pratiquer') || lowerMessage.includes('exercice')) {
      return 'kinesthetic';
    }

    return 'reading'; // Par d√©faut
  }

  /**
   * üéØ Obtenir les interactions r√©centes
   */
  private getRecentInteractions(): any[] {
    // Simulation d'historique d'interactions
    return [
      { type: 'question', timestamp: new Date(Date.now() - 300000), quality: 'good' },
      { type: 'response', timestamp: new Date(Date.now() - 180000), quality: 'excellent' },
      { type: 'exercise', timestamp: new Date(Date.now() - 60000), quality: 'average' }
    ];
  }

  /**
   * üéØ Identifier les domaines de difficult√©
   */
  private identifyStrugglingAreas(): string[] {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    const strugglingAreas: string[] = [];

    if (progress.score < 60) {
      switch (currentWorkshop) {
        case 1:
          strugglingAreas.push('Identification des biens supports', '√âvaluation de criticit√©');
          break;
        case 2:
          strugglingAreas.push('Analyse des menaces', 'Caract√©risation des sources de risque');
          break;
        case 3:
          strugglingAreas.push('Sc√©narios strat√©giques', '√âvaluation d\'impact');
          break;
        case 4:
          strugglingAreas.push('Chemins d\'attaque', 'Sc√©narios op√©rationnels');
          break;
        case 5:
          strugglingAreas.push('Traitement des risques', 'Mesures de s√©curit√©');
          break;
      }
    }

    return strugglingAreas;
  }

  /**
   * üéØ Obtenir la phase EBIOS actuelle
   */
  private getCurrentEbiosPhase(): string {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const phases = [
      'Cadrage et socle de s√©curit√©',
      'Sources de risque',
      'Sc√©narios strat√©giques',
      'Sc√©narios op√©rationnels',
      'Traitement du risque'
    ];

    return phases[currentWorkshop - 1] || 'Phase inconnue';
  }

  /**
   * üéØ D√©terminer le niveau d'expertise
   */
  private determineExpertLevel(): string {
    const overallProgress = this.calculateOverallProgress();

    if (overallProgress > 80) return 'expert';
    if (overallProgress > 50) return 'intermediate';
    return 'beginner';
  }

  /**
   * üéØ G√©n√©rer les prochaines actions intelligentes
   */
  private generateIntelligentNextActions(): string[] {
    const currentWorkshop = this.currentSession!.currentWorkshop;
    const progress = this.currentSession!.workshopProgresses[currentWorkshop];

    const actions: string[] = [];

    if (progress.score < 70) {
      actions.push('R√©viser les concepts fondamentaux');
      actions.push('Demander des clarifications');
    } else {
      actions.push('Passer √† l\'√©tape suivante');
      actions.push('Approfondir les concepts avanc√©s');
    }

    actions.push('Poser une question sp√©cifique');
    actions.push('Voir un exemple concret');

    return actions;
  }

  /**
   * üîç Analyse s√©mantique avanc√©e du message
   */
  private performSemanticAnalysis(message: string, _context: any): any {
    const intent = this._analyzeMessageIntent(message);

    return {
      intent: intent.type,
      confidence: intent.confidence,
      complexity: this.assessMessageComplexity(message),
      emotionalTone: this.detectEmotionalTone(message),
      technicalLevel: this.assessTechnicalLevel(message),
      learningNeed: this.identifyLearningNeed(message, _context),
      urgency: this.assessUrgency(message),
      contextRelevance: this.assessContextRelevance(message, _context)
    };
  }

  /**
   * üß† S√©lection de l'expert IA appropri√©
   */
  private selectExpertPersona(semanticAnalysis: any, context: any): any {
    const expertPersonas = {
      'anssi_expert': {
        name: 'Dr. Marie ANSSI',
        expertise: 'Cybers√©curit√© r√©glementaire et conformit√©',
        style: 'Pr√©cis, m√©thodique, r√©f√©rences normatives',
        specialties: ['EBIOS RM', 'R√©glementation', 'Audit s√©curit√©']
      },
      'hospital_expert': {
        name: 'Dr. Pierre Sant√©',
        expertise: 'S√©curit√© des syst√®mes hospitaliers',
        style: 'Pragmatique, orient√© terrain, exemples concrets',
        specialties: ['SIH', 'Dispositifs m√©dicaux', 'Continuit√© soins']
      },
      'pedagogical_expert': {
        name: 'Prof. Sophie Formation',
        expertise: 'P√©dagogie EBIOS RM',
        style: 'Bienveillant, progressif, encourageant',
        specialties: ['Formation', 'Accompagnement', '√âvaluation']
      }
    };

    // S√©lection intelligente bas√©e sur le contexte
    if (semanticAnalysis.technicalLevel === 'high' && context.expertLevel === 'expert') {
      return expertPersonas.anssi_expert;
    }
    if (context.ebiosContext.sector === 'Sant√©') {
      return expertPersonas.hospital_expert;
    }

    return expertPersonas.pedagogical_expert;
  }

  /**
   * üìã G√©n√©ration de contenu expert contextualis√©
   */
  private async generateExpertContent(semanticAnalysis: any, expertPersona: any, context: any): Promise<any> {
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const strugglingAreas = context.currentState.strugglingAreas;

    // Contenu expert sp√©cialis√© par atelier
    const expertContent = this.getExpertContentByWorkshop(currentWorkshop, semanticAnalysis, context);

    // Adaptation au niveau de l'apprenant
    const adaptedContent = this.adaptContentToLearnerLevel(expertContent, context.expertLevel);

    // Personnalisation selon l'expert
    const personalizedContent = this.personalizeWithExpertVoice(adaptedContent, expertPersona);

    return {
      response: personalizedContent.text,
      responseType: this.determineResponseType(semanticAnalysis),
      confidence: 0.95,
      sources: personalizedContent.sources,
      quiz: personalizedContent.quiz,
      infoCard: personalizedContent.infoCard
    };
  }

  /**
   * üéØ G√©n√©ration d'actions intelligentes contextuelles
   */
  private generateIntelligentActions(semanticAnalysis: any, context: any): any[] {
    const actions: any[] = [];
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const strugglingAreas = context.currentState.strugglingAreas;

    // Actions bas√©es sur les difficult√©s d√©tect√©es
    if (strugglingAreas.length > 0) {
      actions.push({
        id: 'help_struggling',
        label: `üí° Aide sur: ${strugglingAreas[0]}`,
        payload: `Expliquez-moi ${strugglingAreas[0]} avec un exemple concret`,
        type: 'primary',
        icon: 'üÜò'
      });
    }

    // Actions bas√©es sur le niveau
    if (context.expertLevel === 'beginner') {
      actions.push({
        id: 'simplified_explanation',
        label: 'üìö Explication simplifi√©e',
        payload: 'Expliquez-moi cela plus simplement',
        type: 'secondary',
        icon: 'üìñ'
      });
    }

    // Actions contextuelles par atelier
    const workshopActions = this.getWorkshopSpecificActions(currentWorkshop);
    actions.push(...workshopActions);

    // Action de progression
    if (context.learnerProfile.overallProgress > 70) {
      actions.push({
        id: 'next_step',
        label: '‚û°Ô∏è √âtape suivante',
        payload: 'Passons √† l\'√©tape suivante',
        type: 'success',
        icon: 'üöÄ'
      });
    }

    return actions;
  }

  /**
   * üîÑ Calcul de l'adaptation du parcours
   */
  private calculatePathAdaptation(context: any): any {
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const progress = context.currentState.workshopProgress;

    let adaptationLevel = 'normal';
    let recommendations: string[] = [];

    // Adaptation bas√©e sur les performances
    if (progress.score < 50) {
      adaptationLevel = 'simplified';
      recommendations.push('R√©vision des concepts de base');
      recommendations.push('Exercices pratiques suppl√©mentaires');
    } else if (progress.score > 85) {
      adaptationLevel = 'advanced';
      recommendations.push('Approfondissement des concepts');
      recommendations.push('Cas d\'usage complexes');
    }

    return {
      level: adaptationLevel,
      recommendations,
      progressUpdate: {
        score: progress.score,
        workshopId: currentWorkshop,
        completionPercentage: context.learnerProfile.overallProgress
      }
    };
  }

  // ========================================
  // üîç M√âTHODES D'ANALYSE S√âMANTIQUE AVANC√âE
  // ========================================

  /**
   * üìä √âvaluer la complexit√© du message
   */
  private assessMessageComplexity(message: string): 'low' | 'medium' | 'high' {
    const technicalTerms = /EBIOS|ANSSI|RGPD|NIS2|HDS|SIH|PACS|IoMT|MITRE|ATT&CK/gi;
    const complexStructure = /\b(comment|pourquoi|dans quelle mesure|quels sont les impacts)\b/gi;

    const techMatches = (message.match(technicalTerms) || []).length;
    const structMatches = (message.match(complexStructure) || []).length;

    if (techMatches > 2 || structMatches > 1 || message.length > 200) return 'high';
    if (techMatches > 0 || structMatches > 0 || message.length > 50) return 'medium';
    return 'low';
  }

  /**
   * üòä D√©tecter le ton √©motionnel
   */
  private detectEmotionalTone(message: string): 'frustrated' | 'confused' | 'confident' | 'neutral' {
    const frustrated = /difficile|compliqu√©|perdu|bloqu√©|aide|probl√®me/gi;
    const confused = /comprends pas|comment|pourquoi|qu'est-ce|unclear/gi;
    const confident = /parfait|excellent|compris|facile|ok|d'accord/gi;

    if (message.match(frustrated)) return 'frustrated';
    if (message.match(confused)) return 'confused';
    if (message.match(confident)) return 'confident';
    return 'neutral';
  }

  /**
   * üîß √âvaluer le niveau technique
   */
  private assessTechnicalLevel(message: string): 'basic' | 'intermediate' | 'advanced' {
    const basicTerms = /aide|exemple|simple|facile|commencer/gi;
    const advancedTerms = /architecture|impl√©mentation|m√©thodologie|conformit√©|audit/gi;
    const expertTerms = /SCADA|API|HSM|SIEM|SOC|CERT|CVE|MITRE|ATT&CK/gi;

    if (message.match(expertTerms)) return 'advanced';
    if (message.match(advancedTerms)) return 'intermediate';
    return 'basic';
  }

  /**
   * üéØ Identifier le besoin d'apprentissage
   */
  private identifyLearningNeed(message: string, context: any): string {
    const needPatterns = {
      'conceptual_understanding': /qu'est-ce|d√©finition|concept|principe/gi,
      'practical_application': /comment faire|exemple|pratique|appliquer/gi,
      'validation': /correct|juste|bon|validation|v√©rification/gi,
      'progression': /suivant|apr√®s|continuer|√©tape/gi,
      'clarification': /expliquer|clarifier|pr√©ciser|d√©tailler/gi
    };

    for (const [need, pattern] of Object.entries(needPatterns)) {
      if (message.match(pattern)) return need;
    }

    return 'general_guidance';
  }

  /**
   * ‚ö° √âvaluer l'urgence
   */
  private assessUrgency(message: string): 'low' | 'medium' | 'high' {
    const highUrgency = /urgent|rapidement|bloqu√©|probl√®me|erreur/gi;
    const mediumUrgency = /bient√¥t|maintenant|aujourd'hui/gi;

    if (message.match(highUrgency)) return 'high';
    if (message.match(mediumUrgency)) return 'medium';
    return 'low';
  }

  /**
   * üéØ √âvaluer la pertinence contextuelle
   */
  private assessContextRelevance(message: string, context: any): number {
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const workshopKeywords = {
      1: ['cadrage', 'p√©rim√®tre', 'biens supports', 'socle', 's√©curit√©'],
      2: ['menaces', 'sources', 'risque', 'attaquants', 'vuln√©rabilit√©s'],
      3: ['sc√©narios', 'strat√©giques', 'impact', 'vraisemblance'],
      4: ['op√©rationnels', 'chemins', 'attaque', 'techniques'],
      5: ['traitement', 'mesures', 's√©curit√©', 'plan', 'mise en ≈ìuvre']
    };

    const keywords = workshopKeywords[currentWorkshop as keyof typeof workshopKeywords] || [];
    const matches = keywords.filter(keyword =>
      message.toLowerCase().includes(keyword)
    ).length;

    return Math.min(matches / keywords.length, 1.0);
  }

  /**
   * üìö Obtenir le contenu expert par atelier
   */
  private getExpertContentByWorkshop(workshop: number, semanticAnalysis: any, context: any): any {
    const expertContents = {
      1: {
        title: 'Atelier 1 - Cadrage et Socle de S√©curit√©',
        concepts: ['Biens supports', 'Valeurs m√©tier', 'P√©rim√®tre d\'√©tude', 'Socle de s√©curit√©'],
        expertGuidance: `Dans le contexte hospitalier du ${context.ebiosContext.organization}, l'identification des biens supports critiques n√©cessite une approche m√©thodique...`,
        practicalExample: 'Pour un CHU, les biens supports primaires incluent le SIH, les √©quipements de r√©animation, et les donn√©es patients...'
      },
      2: {
        title: 'Atelier 2 - Sources de Risque',
        concepts: ['Sources de menaces', 'Capacit√©s', 'Motivations', 'Caract√©risation'],
        expertGuidance: `L'analyse des sources de risque en milieu hospitalier r√©v√®le des acteurs sp√©cifiques...`,
        practicalExample: 'Les cybercriminels sp√©cialis√©s dans le ransomware hospitalier comme Conti ou Ryuk...'
      },
      3: {
        title: 'Atelier 3 - Sc√©narios Strat√©giques',
        concepts: ['Sc√©narios de risque', 'Impact m√©tier', 'Vraisemblance', 'Gravit√©'],
        expertGuidance: `La construction de sc√©narios strat√©giques pour un √©tablissement de sant√©...`,
        practicalExample: 'Sc√©nario : Compromission du SIH par ransomware pendant 72h...'
      },
      4: {
        title: 'Atelier 4 - Sc√©narios Op√©rationnels',
        concepts: ['Chemins d\'attaque', 'Techniques', 'Faisabilit√©', 'Points de contr√¥le'],
        expertGuidance: `L'analyse des chemins d'attaque op√©rationnels dans l'environnement hospitalier...`,
        practicalExample: 'Chemin d\'attaque : Phishing ‚Üí Compromission poste ‚Üí Mouvement lat√©ral ‚Üí SIH...'
      },
      5: {
        title: 'Atelier 5 - Traitement du Risque',
        concepts: ['Strat√©gies de traitement', 'Mesures de s√©curit√©', 'Plan d\'action', 'Validation'],
        expertGuidance: `Le plan de traitement des risques pour un CHU doit prioriser...`,
        practicalExample: 'Mesures prioritaires : Segmentation r√©seau, sauvegarde offline, formation...'
      }
    };

    return expertContents[workshop as keyof typeof expertContents] || expertContents[1];
  }

  /**
   * üéì Adapter le contenu au niveau de l'apprenant
   */
  private adaptContentToLearnerLevel(content: any, expertLevel: string): any {
    switch (expertLevel) {
      case 'beginner':
        return {
          ...content,
          explanation: `üéì **NIVEAU D√âBUTANT**\n\n${content.expertGuidance}\n\n**üí° Pour bien comprendre :**\n${content.practicalExample}`,
          complexity: 'simplified',
          examples: 3
        };
      case 'intermediate':
        return {
          ...content,
          explanation: `üéØ **NIVEAU INTERM√âDIAIRE**\n\n${content.expertGuidance}\n\n**üîç Analyse approfondie :**\n${content.practicalExample}`,
          complexity: 'standard',
          examples: 2
        };
      case 'expert':
        return {
          ...content,
          explanation: `üèÜ **NIVEAU EXPERT**\n\n${content.expertGuidance}\n\n**‚ö° Application avanc√©e :**\n${content.practicalExample}`,
          complexity: 'advanced',
          examples: 1
        };
      default:
        return content;
    }
  }

  /**
   * üé≠ Personnaliser avec la voix de l'expert
   */
  private personalizeWithExpertVoice(content: any, expertPersona: any): any {
    const personalizedText = `**${expertPersona.name}** - *${expertPersona.expertise}*

${content.explanation}

**üéØ Mon conseil d'expert :**
En tant que sp√©cialiste ${expertPersona.specialties.join(', ')}, je recommande de ${this.generatePersonalizedAdvice(content, expertPersona)}.

**üìö Sources de r√©f√©rence :**`;

    return {
      text: personalizedText,
      sources: this.getExpertSources(expertPersona),
      quiz: this.generateContextualQuiz(content),
      infoCard: this.generateExpertInfoCard(content, expertPersona)
    };
  }

  /**
   * üéØ G√©n√©rer un conseil personnalis√©
   */
  private generatePersonalizedAdvice(content: any, expertPersona: any): string {
    const adviceTemplates = {
      'anssi_expert': 'suivre rigoureusement la m√©thodologie ANSSI et documenter chaque √©tape pour la conformit√© r√©glementaire',
      'hospital_expert': 'prioriser la continuit√© des soins et adapter les mesures aux contraintes op√©rationnelles hospitali√®res',
      'pedagogical_expert': 'proc√©der √©tape par √©tape en validant votre compr√©hension avant de passer au concept suivant'
    };

    return adviceTemplates[expertPersona.name.includes('ANSSI') ? 'anssi_expert' :
                          expertPersona.name.includes('Sant√©') ? 'hospital_expert' :
                          'pedagogical_expert'] || 'adapter votre approche au contexte sp√©cifique';
  }

  /**
   * üìö Obtenir les sources expertes
   */
  private getExpertSources(expertPersona: any): string[] {
    const sources = {
      'anssi_expert': [
        'Guide ANSSI - EBIOS Risk Manager',
        'R√©f√©rentiel de s√©curit√© pour le cloud',
        'Guide de classification des donn√©es'
      ],
      'hospital_expert': [
        'Guide ANSSI - S√©curit√© des syst√®mes d\'information de sant√©',
        'R√©f√©rentiel HDS v1.1',
        'Politique g√©n√©rale de s√©curit√© des syst√®mes d\'information de sant√©'
      ],
      'pedagogical_expert': [
        'M√©thode EBIOS Risk Manager - Guide pratique',
        'Cas d\'usage sectoriels EBIOS RM',
        'Formation ANSSI - Analyse de risques'
      ]
    };

    return sources[expertPersona.name.includes('ANSSI') ? 'anssi_expert' :
                   expertPersona.name.includes('Sant√©') ? 'hospital_expert' :
                   'pedagogical_expert'] || sources.pedagogical_expert;
  }

  /**
   * üß† G√©n√©rer un quiz contextuel
   */
  private generateContextualQuiz(content: any): any {
    // Quiz adaptatif bas√© sur le contenu
    const quizzes = {
      'Atelier 1': {
        question: 'Dans le contexte du CHU m√©tropolitain, quel est le bien support le plus critique ?',
        options: [
          'Le syst√®me de climatisation',
          'Le SIH (Syst√®me d\'Information Hospitalier)',
          'Le parking des visiteurs',
          'La caf√©t√©ria'
        ],
        correctAnswer: 1,
        explanation: 'Le SIH est critique car il g√®re tous les dossiers patients et la continuit√© des soins d√©pend de sa disponibilit√©.'
      },
      'Atelier 2': {
        question: 'Quelle est la principale motivation des cybercriminels ciblant les h√¥pitaux ?',
        options: [
          'L\'espionnage industriel',
          'Le gain financier via ransomware',
          'La perturbation politique',
          'La recherche acad√©mique'
        ],
        correctAnswer: 1,
        explanation: 'Les cybercriminels ciblent les h√¥pitaux principalement pour le gain financier, sachant que ces √©tablissements paieront rapidement pour restaurer les soins.'
      }
    };

    return quizzes[content.title?.includes('Atelier 1') ? 'Atelier 1' : 'Atelier 2'] || null;
  }

  /**
   * üìã G√©n√©rer une carte d'information experte
   */
  private generateExpertInfoCard(content: any, expertPersona: any): any {
    return {
      title: `üí° Conseil Expert - ${expertPersona.name}`,
      content: `**Sp√©cialit√© :** ${expertPersona.expertise}

**Point cl√© √† retenir :**
${content.practicalExample}

**Application pratique :**
Appliquez cette connaissance directement √† votre analyse du CHU m√©tropolitain.`,
      resources: [
        'Guide m√©thodologique d√©taill√©',
        'Exemples sectoriels',
        'Templates d\'analyse'
      ]
    };
  }

  /**
   * üéØ D√©terminer le type de r√©ponse
   */
  private determineResponseType(semanticAnalysis: any): string {
    if (semanticAnalysis.learningNeed === 'validation') return 'quiz';
    if (semanticAnalysis.complexity === 'high') return 'info_card';
    if (semanticAnalysis.emotionalTone === 'frustrated') return 'action_suggestions';
    return 'text';
  }

  /**
   * üéØ Obtenir les actions sp√©cifiques par atelier
   */
  private getWorkshopSpecificActions(workshop: number): any[] {
    const workshopActions = {
      1: [
        { id: 'identify_assets', label: 'üèóÔ∏è Identifier les biens supports', payload: 'Aidez-moi √† identifier les biens supports du CHU', type: 'primary', icon: 'üîç' },
        { id: 'assess_criticality', label: '‚öñÔ∏è √âvaluer la criticit√©', payload: 'Comment √©valuer la criticit√© des biens supports ?', type: 'secondary', icon: 'üìä' }
      ],
      2: [
        { id: 'analyze_threats', label: '‚ö†Ô∏è Analyser les menaces', payload: 'Quelles sont les menaces sp√©cifiques au secteur sant√© ?', type: 'primary', icon: 'üéØ' },
        { id: 'characterize_sources', label: 'üïµÔ∏è Caract√©riser les sources', payload: 'Comment caract√©riser les sources de risque ?', type: 'secondary', icon: 'üîç' }
      ],
      3: [
        { id: 'build_scenarios', label: 'üìã Construire les sc√©narios', payload: 'Aidez-moi √† construire des sc√©narios strat√©giques', type: 'primary', icon: 'üé≠' },
        { id: 'assess_impact', label: 'üí• √âvaluer l\'impact', payload: 'Comment √©valuer l\'impact des sc√©narios ?', type: 'secondary', icon: 'üìà' }
      ],
      4: [
        { id: 'model_attacks', label: 'üéØ Mod√©liser les attaques', payload: 'Comment mod√©liser les chemins d\'attaque ?', type: 'primary', icon: 'üó∫Ô∏è' },
        { id: 'assess_feasibility', label: '‚ö° √âvaluer la faisabilit√©', payload: 'Comment √©valuer la faisabilit√© technique ?', type: 'secondary', icon: 'üîß' }
      ],
      5: [
        { id: 'design_treatment', label: 'üõ°Ô∏è Concevoir le traitement', payload: 'Aidez-moi √† concevoir le plan de traitement', type: 'primary', icon: 'üéØ' },
        { id: 'prioritize_measures', label: 'üìä Prioriser les mesures', payload: 'Comment prioriser les mesures de s√©curit√© ?', type: 'secondary', icon: '‚öñÔ∏è' }
      ]
    };

    return workshopActions[workshop as keyof typeof workshopActions] || [];
  }

  // ========================================
  // üìä M√âTHODES DE GESTION INTELLIGENTE DE LA PROGRESSION
  // ========================================

  /**
   * üìä √âvaluer la qualit√© de l'interaction
   */
  private assessInteractionQuality(message: string, response: AgentResponseData): number {
    let quality = 0.5; // Base

    // Qualit√© bas√©e sur la longueur et pertinence du message
    if (message.length > 20) quality += 0.1;
    if (message.length > 50) quality += 0.1;

    // Qualit√© bas√©e sur la confiance de la r√©ponse
    if (response.metadata?.confidence) {
      quality += response.metadata.confidence * 0.3;
    }

    // Bonus pour les questions techniques
    if (this.assessTechnicalLevel(message) === 'advanced') quality += 0.2;

    return Math.min(quality, 1.0);
  }

  /**
   * üéØ Calculer le score adaptatif
   */
  private calculateAdaptiveScore(currentScore: number, interactionQuality: number): number {
    const improvement = interactionQuality * 10; // Max +10 points
    const newScore = currentScore + improvement;

    // √âviter les scores trop √©lev√©s trop rapidement
    const maxIncrease = currentScore < 50 ? 15 : currentScore < 80 ? 10 : 5;

    return Math.min(newScore, currentScore + maxIncrease, 100);
  }

  /**
   * üèÜ Identifier les comp√©tences acquises
   */
  private identifySkillsAcquired(message: string, response: AgentResponseData): string[] {
    const skills: string[] = [];

    // Comp√©tences bas√©es sur le type de r√©ponse
    if (response.type === 'quiz' && response.quiz) {
      skills.push('Validation des connaissances');
    }

    if (response.type === 'info_card') {
      skills.push('Compr√©hension approfondie');
    }

    // Comp√©tences bas√©es sur le contenu du message
    if (message.toLowerCase().includes('exemple')) {
      skills.push('Application pratique');
    }

    if (this.assessTechnicalLevel(message) === 'advanced') {
      skills.push('Ma√Ætrise technique');
    }

    return skills;
  }

  /**
   * üìà Calculer le temps d'interaction
   */
  private calculateInteractionTime(): number {
    // Simulation bas√©e sur la complexit√© de l'interaction
    return Math.floor(Math.random() * 300) + 60; // 1-5 minutes
  }

  /**
   * üîî D√©clencher les √©v√©nements de progression
   */
  private triggerProgressEvents(progress: WorkshopProgress, interactionQuality: number): void {
    // √âv√©nements bas√©s sur les seuils de progression
    if (progress.score >= 70 && !progress.validatedDeliverables.includes('Seuil de validation atteint')) {
      progress.validatedDeliverables.push('Seuil de validation atteint');
    }

    if (progress.score >= 90 && !progress.validatedDeliverables.includes('Excellence atteinte')) {
      progress.validatedDeliverables.push('Excellence atteinte');
    }

    // √âv√©nements bas√©s sur la qualit√© d'interaction
    if (interactionQuality > 0.8) {
      progress.validatedDeliverables.push('Interaction de qualit√©');
    }
  }

  /**
   * üîç D√©tecter les difficult√©s d'apprentissage
   */
  private detectLearningDifficulties(progress: WorkshopProgress): string[] {
    const difficulties: string[] = [];

    if (progress.score < 40) {
      difficulties.push('Compr√©hension des concepts de base');
    }

    if (progress.timeSpent > 3600) { // > 1h
      difficulties.push('Rythme d\'apprentissage lent');
    }

    if (progress.validatedDeliverables.length === 0) {
      difficulties.push('Application pratique insuffisante');
    }

    return difficulties;
  }

  /**
   * üìö Simplifier les prochaines interactions
   */
  private async simplifyNextInteractions(difficulties: string[]): Promise<void> {
    // Adaptation bas√©e sur les difficult√©s d√©tect√©es
    console.log('üîÑ Adaptation: Simplification des interactions pour:', difficulties);

    // Ici, on pourrait ajuster les param√®tres de l'IA pour des r√©ponses plus simples
    // R√©duire la complexit√© technique, ajouter plus d'exemples, etc.
  }

  /**
   * üöÄ Augmenter le niveau de d√©fi
   */
  private async increaseChallengeLevel(): Promise<void> {
    console.log('üöÄ Adaptation: Augmentation du niveau de d√©fi');

    // Ici, on pourrait introduire des concepts plus avanc√©s
    // Poser des questions plus complexes, proposer des cas d'usage avanc√©s
  }

  /**
   * üéØ G√©n√©rer des recommandations personnalis√©es
   */
  private generatePersonalizedRecommendations(progress: WorkshopProgress): string[] {
    const recommendations: string[] = [];

    if (progress.score < 60) {
      recommendations.push('R√©viser les concepts fondamentaux');
      recommendations.push('Demander plus d\'exemples concrets');
    } else if (progress.score > 85) {
      recommendations.push('Explorer des cas d\'usage avanc√©s');
      recommendations.push('Approfondir les aspects techniques');
    }

    if (progress.timeSpent < 900) { // < 15min
      recommendations.push('Prendre plus de temps pour assimiler');
    }

    recommendations.push('Poser des questions sp√©cifiques');
    recommendations.push('Pratiquer avec des exercices');

    return recommendations;
  }

  /**
   * üõ§Ô∏è Mettre √† jour le parcours d'apprentissage
   */
  private updateLearningPathway(recommendations: string[]): void {
    console.log('üõ§Ô∏è Mise √† jour du parcours avec recommandations:', recommendations);

    // Ici, on pourrait ajuster dynamiquement le parcours
    // Ajouter des √©tapes suppl√©mentaires, modifier l'ordre, etc.
  }

  // ========================================
  // üèóÔ∏è MOTEUR IA STRUCTURANT EBIOS RM
  // ========================================

  /**
   * üîç ANALYSE CONTEXTUELLE DU MESSAGE DANS LE WORKSHOP
   */
  private analyzeMessageInWorkshopContext(message: string, workshop: number, progress: any): any {
    const intent = this._analyzeMessageIntent(message);

    // Structure d√©taill√©e EBIOS RM par workshop
    const workshopStructure = this.getWorkshopDetailedStructure(workshop);
    const currentStep = this.getCurrentWorkshopStep(workshop, progress);

    return {
      intent: intent.type,
      confidence: intent.confidence,
      workshop,
      currentStep,
      expectedNextStep: this.getExpectedNextStep(workshop, currentStep),
      workshopStructure,
      messageComplexity: this.assessMessageComplexity(message),
      learnerNeed: this.identifySpecificLearnerNeed(message, workshop, currentStep),
      progressionSignal: this.detectProgressionSignal(message, currentStep)
    };
  }

  /**
   * üéØ D√âTERMINATION DE L'ACTION IA STRUCTURANTE
   */
  private determineStructuralAction(analysis: any, workshop: number, progress: any): any {
    const { intent, currentStep, expectedNextStep, learnerNeed, progressionSignal } = analysis;

    // Logique de d√©cision structur√©e
    let actionType = 'guide_current_step';
    let step = currentStep;
    let guidance = '';
    let nextAction = '';

    // Analyse des signaux de progression
    if (progressionSignal === 'ready_next_step' && currentStep.completion >= 80) {
      actionType = 'advance_to_next_step';
      step = expectedNextStep;
      guidance = `Progression vers ${expectedNextStep.title}`;
      nextAction = expectedNextStep.firstAction;
    } else if (progressionSignal === 'struggling') {
      actionType = 'provide_detailed_help';
      guidance = `Aide d√©taill√©e sur ${currentStep.title}`;
      nextAction = 'clarify_concepts';
    } else if (intent === 'start_training' || intent === 'start_workshop_1') {
      actionType = 'initialize_workshop';
      step = this.getWorkshopFirstStep(workshop);
      guidance = `Initialisation ${step.title}`;
      nextAction = step.firstAction;
    } else if (learnerNeed === 'practical_example') {
      actionType = 'provide_practical_example';
      guidance = `Exemple pratique pour ${currentStep.title}`;
      nextAction = 'apply_example';
    } else if (learnerNeed === 'validation') {
      actionType = 'validate_understanding';
      guidance = `Validation des acquis ${currentStep.title}`;
      nextAction = 'quiz_or_exercise';
    }

    return {
      type: actionType,
      step,
      guidance,
      nextAction,
      workshop,
      structuredContent: this.getStructuredContentForAction(actionType, step, workshop)
    };
  }

  /**
   * üèóÔ∏è G√âN√âRATION DE CONTENU STRUCTUR√â PAR WORKSHOP
   */
  private async generateStructuredWorkshopContent(
    action: any,
    workshop: number,
    progress: any,
    context: any
  ): Promise<any> {
    const { type, step, structuredContent } = action;

    // G√©n√©ration bas√©e sur l'action structurante
    switch (type) {
      case 'initialize_workshop':
        return this.generateWorkshopInitialization(workshop, step, context);

      case 'advance_to_next_step':
        return this.generateStepAdvancement(step, workshop, context);

      case 'provide_detailed_help':
        return this.generateDetailedHelp(step, workshop, context);

      case 'provide_practical_example':
        return this.generatePracticalExample(step, workshop, context);

      case 'validate_understanding':
        return this.generateValidationContent(step, workshop, context);

      case 'guide_current_step':
      default:
        return this.generateStepGuidance(step, workshop, context);
    }
  }

  /**
   * üö® FALLBACK STRUCTUR√â
   */
  private generateStructuredFallback(workshop: number, context: any): AgentResponseData {
    const step = this.getWorkshopFirstStep(workshop);

    return {
      text: `üéì **EBIOS RM - Atelier ${workshop} : ${step.title}**

**Reprenons m√©thodiquement :**

${step.description}

**üéØ Objectif imm√©diat :**
${step.objective}

**üìã Actions √† r√©aliser :**
${step.actions.map((action: string, index: number) => `${index + 1}. ${action}`).join('\n')}

**üí° Pour continuer :**
Dites-moi o√π vous en √™tes ou tapez "√âtape suivante" pour progresser.`,
      type: 'text',
      actions: this.getWorkshopSpecificActions(workshop),
      metadata: {
        confidence: 0.9,
        sources: ['Structure EBIOS RM'],
        timestamp: new Date(),
        workshopStep: step.id,
        fallbackUsed: true
      }
    };
  }

  /**
   * üéØ ACTIONS STRUCTUR√âES PAR √âTAPE
   */
  private generateStructuredActions(action: any, workshop: number, progress: any): any[] {
    const { step, nextAction } = action;

    const baseActions = [
      {
        id: 'next_step',
        label: '‚û°Ô∏è √âtape suivante',
        payload: 'Passons √† l\'√©tape suivante',
        type: 'primary',
        icon: 'üöÄ'
      },
      {
        id: 'help_current',
        label: '‚ùì Aide sur cette √©tape',
        payload: `Aidez-moi avec ${step.title}`,
        type: 'secondary',
        icon: 'üí°'
      },
      {
        id: 'example',
        label: 'üìã Voir un exemple',
        payload: `Montrez-moi un exemple pour ${step.title}`,
        type: 'info',
        icon: 'üëÅÔ∏è'
      }
    ];

    // Actions sp√©cifiques selon l'√©tape
    const specificActions = this.getWorkshopSpecificActions(workshop);

    return [...baseActions, ...specificActions];
  }

  /**
   * üìä CALCUL PROGRESSION STRUCTUR√âE
   */
  private calculateStructuredProgress(action: any, currentProgress: any): any {
    const { step, type } = action;

    let newCompletion = currentProgress.completion || 0;

    // Mise √† jour bas√©e sur l'action
    switch (type) {
      case 'advance_to_next_step':
        newCompletion = Math.min(newCompletion + 20, 100);
        break;
      case 'validate_understanding':
        newCompletion = Math.min(newCompletion + 15, 100);
        break;
      case 'provide_practical_example':
        newCompletion = Math.min(newCompletion + 10, 100);
        break;
      default:
        newCompletion = Math.min(newCompletion + 5, 100);
    }

    return {
      score: newCompletion,
      workshopId: action.workshop,
      stepId: step.id,
      completionPercentage: newCompletion,
      nextMilestone: this.getNextMilestone()
    };
  }

  /**
   * üÜò G√âN√âRATION DE R√âPONSE DE SECOURS CONFORME ANSSI
   */
  private generateFallbackResponse(context: any, validationResult: any): { text: string } {
    const currentWorkshop = context.learnerProfile.currentWorkshop;
    const organization = context.ebiosContext.organization;

    const fallbackResponses = {
      1: `üéì **Formation EBIOS RM - Atelier 1 : Cadrage et Socle de S√©curit√©**

**Contexte :** ${organization}

Dans le cadre de la m√©thodologie EBIOS Risk Manager d√©velopp√©e par l'ANSSI, l'Atelier 1 consiste √† :

**üéØ Objectifs principaux :**
1. **Cadrage de l'√©tude** : D√©finir le p√©rim√®tre d'analyse
2. **Identification des biens supports** : Cartographier les actifs critiques
3. **√âvaluation des valeurs m√©tier** : D√©terminer les enjeux
4. **Construction du socle de s√©curit√©** : √âtablir les mesures de base

**üìã D√©marche m√©thodologique :**
- Analyser l'organisation et ses missions
- Identifier les biens supports primaires et de soutien
- √âvaluer la criticit√© selon les crit√®res DICS (Disponibilit√©, Int√©grit√©, Confidentialit√©, Preuve)
- Documenter les interd√©pendances

**üîó R√©f√©rences ANSSI :**
- Guide EBIOS Risk Manager (version officielle)
- M√©thode d'analyse de risques

**üí° Prochaine √©tape :**
Souhaitez-vous que nous commencions par l'identification des biens supports de votre organisation ?`,

      2: `üéì **Formation EBIOS RM - Atelier 2 : Sources de Risque**

**Contexte :** ${organization}

L'Atelier 2 d'EBIOS Risk Manager se concentre sur l'analyse des sources de risque selon la m√©thodologie ANSSI.

**üéØ Objectifs principaux :**
1. **Identification des sources de menaces** : Cartographier les acteurs malveillants
2. **Caract√©risation des capacit√©s** : √âvaluer les moyens techniques
3. **Analyse des motivations** : Comprendre les objectifs
4. **√âvaluation de l'exposition** : Mesurer la visibilit√©

**üìã D√©marche m√©thodologique :**
- Identifier les sources de menaces pertinentes (cybercriminels, √âtats, hacktivistes, etc.)
- Caract√©riser leurs capacit√©s techniques et organisationnelles
- Analyser leurs motivations et objectifs
- √âvaluer l'exposition de l'organisation

**üè• Sp√©cificit√©s secteur sant√© :**
- Cybercriminels sp√©cialis√©s dans le ransomware hospitalier
- Menaces internes (personnel, prestataires)
- Espionnage industriel pharmaceutique

**üîó R√©f√©rences ANSSI :**
- Guide EBIOS Risk Manager - Atelier 2
- Panorama de la cybermenace

**üí° Prochaine √©tape :**
Analysons ensemble les sources de menaces sp√©cifiques √† votre secteur d'activit√©.`,

      3: `üéì **Formation EBIOS RM - Atelier 3 : Sc√©narios Strat√©giques**

**Contexte :** ${organization}

L'Atelier 3 d'EBIOS Risk Manager construit les sc√©narios strat√©giques selon la m√©thodologie ANSSI.

**üéØ Objectifs principaux :**
1. **Construction des sc√©narios** : Croiser sources et biens supports
2. **√âvaluation de l'impact** : Mesurer les cons√©quences m√©tier
3. **Estimation de la vraisemblance** : Probabilit√© de r√©alisation
4. **Calcul de la gravit√©** : Impact √ó Vraisemblance

**üìã D√©marche m√©thodologique :**
- Croiser les sources de risque avec les biens supports
- Construire des sc√©narios de risque coh√©rents
- √âvaluer l'impact sur les valeurs m√©tier
- Estimer la vraisemblance de r√©alisation

**üè• Exemples secteur sant√© :**
- Ransomware sur SIH ‚Üí Arr√™t des soins programm√©s
- Compromission PACS ‚Üí Perte d'imagerie m√©dicale
- Attaque DDoS ‚Üí Indisponibilit√© des services critiques

**üîó R√©f√©rences ANSSI :**
- Guide EBIOS Risk Manager - Atelier 3
- √âchelles d'impact et de vraisemblance

**üí° Prochaine √©tape :**
Construisons ensemble vos premiers sc√©narios strat√©giques.`,

      4: `üéì **Formation EBIOS RM - Atelier 4 : Sc√©narios Op√©rationnels**

**Contexte :** ${organization}

L'Atelier 4 d'EBIOS Risk Manager d√©taille les sc√©narios op√©rationnels selon la m√©thodologie ANSSI.

**üéØ Objectifs principaux :**
1. **Mod√©lisation des chemins d'attaque** : D√©tailler les techniques
2. **√âvaluation de la faisabilit√©** : Analyser la complexit√©
3. **Identification des points de contr√¥le** : Localiser les mesures
4. **Priorisation des sc√©narios** : Classer par criticit√©

**üìã D√©marche m√©thodologique :**
- D√©composer les sc√©narios strat√©giques en √©tapes techniques
- Utiliser des r√©f√©rentiels comme MITRE ATT&CK
- √âvaluer la faisabilit√© technique de chaque √©tape
- Identifier les points de d√©tection et de blocage

**üè• Exemple hospitalier :**
- Phishing ‚Üí Compromission poste ‚Üí Mouvement lat√©ral ‚Üí Chiffrement SIH
- Chaque √©tape analys√©e avec ses contr√¥les possibles

**üîó R√©f√©rences ANSSI :**
- Guide EBIOS Risk Manager - Atelier 4
- R√©f√©rentiel MITRE ATT&CK

**üí° Prochaine √©tape :**
Analysons les chemins d'attaque sp√©cifiques √† votre infrastructure.`,

      5: `üéì **Formation EBIOS RM - Atelier 5 : Traitement du Risque**

**Contexte :** ${organization}

L'Atelier 5 d'EBIOS Risk Manager d√©finit le plan de traitement selon la m√©thodologie ANSSI.

**üéØ Objectifs principaux :**
1. **Strat√©gies de traitement** : √âviter, r√©duire, transf√©rer, accepter
2. **S√©lection des mesures** : Choisir les contr√¥les appropri√©s
3. **Plan d'action** : Prioriser et planifier
4. **Validation** : V√©rifier l'efficacit√© r√©siduelle

**üìã D√©marche m√©thodologique :**
- D√©finir les objectifs de s√©curit√©
- S√©lectionner les mesures de s√©curit√© appropri√©es
- Construire le plan de traitement des risques
- Valider l'efficacit√© et calculer le risque r√©siduel

**üè• Mesures prioritaires sant√© :**
- Segmentation r√©seau IT/OT
- Sauvegarde offline des donn√©es critiques
- Plan de continuit√© d'activit√©
- Formation du personnel

**üîó R√©f√©rences ANSSI :**
- Guide EBIOS Risk Manager - Atelier 5
- R√©f√©rentiel de mesures de s√©curit√©

**üí° Prochaine √©tape :**
Construisons votre plan de traitement des risques personnalis√©.`
    };

    const fallbackText = fallbackResponses[currentWorkshop as keyof typeof fallbackResponses] || fallbackResponses[1];

    return {
      text: `${fallbackText}

**‚ö†Ô∏è Note de qualit√© :**
Cette r√©ponse a √©t√© g√©n√©r√©e selon les standards ANSSI pour garantir la conformit√© r√©glementaire.

**üéØ Actions recommand√©es :**
- Posez des questions sp√©cifiques sur les concepts
- Demandez des exemples concrets
- Sollicitez des clarifications si n√©cessaire

**üìö Pour approfondir :**
Consultez le guide officiel EBIOS Risk Manager sur le site de l'ANSSI.`
    };
  }

  // ========================================
  // üìã STRUCTURE D√âTAILL√âE EBIOS RM PAR WORKSHOP
  // ========================================

  /**
   * üèóÔ∏è STRUCTURE D√âTAILL√âE DES WORKSHOPS EBIOS RM
   */
  private getWorkshopDetailedStructure(workshop: number): any {
    const structures = {
      1: {
        title: 'Atelier 1 - Cadrage et Socle de S√©curit√©',
        phases: [
          {
            id: 'phase_1_1',
            title: 'Cadrage de l\'√©tude',
            steps: [
              { id: 'step_1_1_1', title: 'D√©finition du p√©rim√®tre', duration: 15, mandatory: true },
              { id: 'step_1_1_2', title: 'Identification des parties prenantes', duration: 10, mandatory: true },
              { id: 'step_1_1_3', title: 'D√©finition des objectifs', duration: 10, mandatory: true }
            ]
          },
          {
            id: 'phase_1_2',
            title: 'Identification des biens supports',
            steps: [
              { id: 'step_1_2_1', title: 'Cartographie des biens primaires', duration: 20, mandatory: true },
              { id: 'step_1_2_2', title: 'Identification des biens de soutien', duration: 15, mandatory: true },
              { id: 'step_1_2_3', title: 'Analyse des interd√©pendances', duration: 15, mandatory: true }
            ]
          },
          {
            id: 'phase_1_3',
            title: '√âvaluation des valeurs m√©tier',
            steps: [
              { id: 'step_1_3_1', title: 'Crit√®res DICS (Disponibilit√©)', duration: 10, mandatory: true },
              { id: 'step_1_3_2', title: 'Crit√®res DICS (Int√©grit√©)', duration: 10, mandatory: true },
              { id: 'step_1_3_3', title: 'Crit√®res DICS (Confidentialit√©)', duration: 10, mandatory: true },
              { id: 'step_1_3_4', title: 'Crit√®res DICS (Preuve)', duration: 10, mandatory: true }
            ]
          },
          {
            id: 'phase_1_4',
            title: 'Construction du socle de s√©curit√©',
            steps: [
              { id: 'step_1_4_1', title: 'Mesures organisationnelles', duration: 15, mandatory: true },
              { id: 'step_1_4_2', title: 'Mesures techniques', duration: 15, mandatory: true },
              { id: 'step_1_4_3', title: 'Validation du socle', duration: 10, mandatory: true }
            ]
          }
        ]
      },
      2: {
        title: 'Atelier 2 - Sources de Risque',
        phases: [
          {
            id: 'phase_2_1',
            title: 'Identification des sources de menaces',
            steps: [
              { id: 'step_2_1_1', title: 'Cybercriminels', duration: 15, mandatory: true },
              { id: 'step_2_1_2', title: '√âtats-nations', duration: 15, mandatory: true },
              { id: 'step_2_1_3', title: 'Hacktivistes', duration: 10, mandatory: true },
              { id: 'step_2_1_4', title: 'Menaces internes', duration: 15, mandatory: true }
            ]
          },
          {
            id: 'phase_2_2',
            title: 'Caract√©risation des capacit√©s',
            steps: [
              { id: 'step_2_2_1', title: 'Capacit√©s techniques', duration: 20, mandatory: true },
              { id: 'step_2_2_2', title: 'Capacit√©s organisationnelles', duration: 15, mandatory: true },
              { id: 'step_2_2_3', title: 'Ressources disponibles', duration: 10, mandatory: true }
            ]
          },
          {
            id: 'phase_2_3',
            title: 'Analyse des motivations',
            steps: [
              { id: 'step_2_3_1', title: 'Motivations financi√®res', duration: 10, mandatory: true },
              { id: 'step_2_3_2', title: 'Motivations politiques', duration: 10, mandatory: true },
              { id: 'step_2_3_3', title: 'Motivations personnelles', duration: 10, mandatory: true }
            ]
          }
        ]
      },
      3: {
        title: 'Atelier 3 - Sc√©narios Strat√©giques',
        phases: [
          {
            id: 'phase_3_1',
            title: 'Construction des sc√©narios',
            steps: [
              { id: 'step_3_1_1', title: 'Croisement sources/biens', duration: 20, mandatory: true },
              { id: 'step_3_1_2', title: 'Sc√©narios de risque', duration: 25, mandatory: true },
              { id: 'step_3_1_3', title: 'Validation coh√©rence', duration: 15, mandatory: true }
            ]
          },
          {
            id: 'phase_3_2',
            title: '√âvaluation impact et vraisemblance',
            steps: [
              { id: 'step_3_2_1', title: 'Impact sur valeurs m√©tier', duration: 20, mandatory: true },
              { id: 'step_3_2_2', title: 'Vraisemblance de r√©alisation', duration: 20, mandatory: true },
              { id: 'step_3_2_3', title: 'Calcul de gravit√©', duration: 15, mandatory: true }
            ]
          }
        ]
      },
      4: {
        title: 'Atelier 4 - Sc√©narios Op√©rationnels',
        phases: [
          {
            id: 'phase_4_1',
            title: 'Mod√©lisation des chemins d\'attaque',
            steps: [
              { id: 'step_4_1_1', title: 'D√©composition technique', duration: 25, mandatory: true },
              { id: 'step_4_1_2', title: 'R√©f√©rentiel MITRE ATT&CK', duration: 20, mandatory: true },
              { id: 'step_4_1_3', title: 'S√©quencement des √©tapes', duration: 15, mandatory: true }
            ]
          },
          {
            id: 'phase_4_2',
            title: '√âvaluation de faisabilit√©',
            steps: [
              { id: 'step_4_2_1', title: 'Complexit√© technique', duration: 15, mandatory: true },
              { id: 'step_4_2_2', title: 'Points de contr√¥le', duration: 20, mandatory: true },
              { id: 'step_4_2_3', title: 'Priorisation sc√©narios', duration: 15, mandatory: true }
            ]
          }
        ]
      },
      5: {
        title: 'Atelier 5 - Traitement du Risque',
        phases: [
          {
            id: 'phase_5_1',
            title: 'Strat√©gies de traitement',
            steps: [
              { id: 'step_5_1_1', title: '√âviter le risque', duration: 15, mandatory: true },
              { id: 'step_5_1_2', title: 'R√©duire le risque', duration: 20, mandatory: true },
              { id: 'step_5_1_3', title: 'Transf√©rer le risque', duration: 10, mandatory: true },
              { id: 'step_5_1_4', title: 'Accepter le risque', duration: 10, mandatory: true }
            ]
          },
          {
            id: 'phase_5_2',
            title: 'Plan d\'action',
            steps: [
              { id: 'step_5_2_1', title: 'S√©lection des mesures', duration: 20, mandatory: true },
              { id: 'step_5_2_2', title: 'Priorisation', duration: 15, mandatory: true },
              { id: 'step_5_2_3', title: 'Planification', duration: 15, mandatory: true },
              { id: 'step_5_2_4', title: 'Validation efficacit√©', duration: 10, mandatory: true }
            ]
          }
        ]
      }
    };

    return structures[workshop as keyof typeof structures] || structures[1];
  }

  /**
   * üìç OBTENIR L'√âTAPE ACTUELLE DU WORKSHOP
   */
  private getCurrentWorkshopStep(workshop: number, progress: any): any {
    const structure = this.getWorkshopDetailedStructure(workshop);
    const completion = progress?.completion || 0;

    // Calcul de l'√©tape bas√© sur la progression
    let totalSteps = 0;
    let currentStepIndex = 0;

    for (const phase of structure.phases) {
      for (const step of phase.steps) {
        if (completion <= (totalSteps + 1) * (100 / this.getTotalStepsCount(structure))) {
          return {
            ...step,
            phase: phase.title,
            phaseId: phase.id,
            stepIndex: currentStepIndex,
            completion: completion,
            objective: this.getStepObjective(step.id),
            actions: this.getStepActions(step.id),
            deliverables: this.getStepDeliverables(step.id)
          };
        }
        totalSteps++;
        currentStepIndex++;
      }
    }

    // Retourner la premi√®re √©tape par d√©faut
    const firstStep = structure.phases[0].steps[0];
    return {
      ...firstStep,
      phase: structure.phases[0].title,
      phaseId: structure.phases[0].id,
      stepIndex: 0,
      completion: 0,
      objective: this.getStepObjective(firstStep.id),
      actions: this.getStepActions(firstStep.id),
      deliverables: this.getStepDeliverables(firstStep.id)
    };
  }

  /**
   * ‚û°Ô∏è OBTENIR L'√âTAPE SUIVANTE ATTENDUE
   */
  private getExpectedNextStep(workshop: number, currentStep: any): any {
    const structure = this.getWorkshopDetailedStructure(workshop);
    const currentIndex = currentStep.stepIndex || 0;

    let stepIndex = 0;
    for (const phase of structure.phases) {
      for (const step of phase.steps) {
        if (stepIndex === currentIndex + 1) {
          return {
            ...step,
            phase: phase.title,
            phaseId: phase.id,
            stepIndex,
            objective: this.getStepObjective(step.id),
            actions: this.getStepActions(step.id),
            firstAction: this.getStepFirstAction(step.id)
          };
        }
        stepIndex++;
      }
    }

    // Si c'est la derni√®re √©tape, retourner l'atelier suivant
    if (workshop < 5) {
      return {
        id: `workshop_${workshop + 1}`,
        title: `Atelier ${workshop + 1}`,
        phase: 'Transition',
        isWorkshopTransition: true
      };
    }

    return {
      id: 'formation_complete',
      title: 'Formation termin√©e',
      phase: 'Finalisation'
    };
  }

  // ========================================
  // üîß M√âTHODES UTILITAIRES STRUCTURE EBIOS RM
  // ========================================

  /**
   * üìä COMPTER LE NOMBRE TOTAL D'√âTAPES
   */
  private getTotalStepsCount(structure: any): number {
    return structure.phases.reduce((total: number, phase: any) =>
      total + phase.steps.length, 0
    );
  }

  /**
   * üéØ OBTENIR L'OBJECTIF D'UNE √âTAPE
   */
  private getStepObjective(stepId: string): string {
    const objectives: Record<string, string> = {
      // Atelier 1
      'step_1_1_1': 'D√©limiter pr√©cis√©ment le p√©rim√®tre d\'analyse de risques du CHU',
      'step_1_1_2': 'Identifier toutes les parties prenantes impliqu√©es dans l\'analyse',
      'step_1_1_3': 'D√©finir les objectifs de s√©curit√© et les contraintes',
      'step_1_2_1': 'Cartographier tous les biens supports primaires critiques',
      'step_1_2_2': 'Identifier les biens de soutien n√©cessaires au fonctionnement',
      'step_1_2_3': 'Analyser les interd√©pendances entre les diff√©rents biens',
      'step_1_3_1': '√âvaluer les besoins de disponibilit√© pour chaque bien support',
      'step_1_3_2': '√âvaluer les besoins d\'int√©grit√© des donn√©es et syst√®mes',
      'step_1_3_3': '√âvaluer les besoins de confidentialit√© des informations',
      'step_1_3_4': '√âvaluer les besoins de preuve et de tra√ßabilit√©',
      'step_1_4_1': 'D√©finir les mesures organisationnelles de base',
      'step_1_4_2': 'D√©finir les mesures techniques de s√©curit√© minimales',
      'step_1_4_3': 'Valider la coh√©rence et l\'efficacit√© du socle',

      // Atelier 2
      'step_2_1_1': 'Identifier les cybercriminels ciblant le secteur sant√©',
      'step_2_1_2': 'Analyser les menaces d\'√âtats-nations sur les infrastructures critiques',
      'step_2_1_3': '√âvaluer les risques li√©s aux hacktivistes',
      'step_2_1_4': 'Analyser les menaces internes (personnel, prestataires)',
      'step_2_2_1': 'Caract√©riser les capacit√©s techniques des sources de menaces',
      'step_2_2_2': '√âvaluer les capacit√©s organisationnelles des attaquants',
      'step_2_2_3': 'Analyser les ressources disponibles pour les attaquants',
      'step_2_3_1': 'Comprendre les motivations financi√®res des attaquants',
      'step_2_3_2': 'Analyser les motivations politiques et g√©opolitiques',
      'step_2_3_3': '√âvaluer les motivations personnelles et id√©ologiques'
    };

    return objectives[stepId] || 'Objectif √† d√©finir pour cette √©tape';
  }

  /**
   * üìã OBTENIR LES ACTIONS D'UNE √âTAPE
   */
  private getStepActions(stepId: string): string[] {
    const actions: Record<string, string[]> = {
      'step_1_1_1': [
        'D√©finir les limites g√©ographiques et organisationnelles',
        'Identifier les syst√®mes et processus inclus',
        'Documenter les exclusions et leurs justifications'
      ],
      'step_1_2_1': [
        'Lister les syst√®mes d\'information hospitaliers (SIH)',
        'Identifier les √©quipements m√©dicaux connect√©s',
        'Cartographier les infrastructures r√©seau critiques'
      ],
      'step_1_3_1': [
        'D√©finir les niveaux de disponibilit√© requis (99%, 99.9%, etc.)',
        'Identifier les plages de maintenance acceptables',
        '√âvaluer l\'impact des interruptions de service'
      ],
      'step_2_1_1': [
        'Analyser les groupes de ransomware ciblant les h√¥pitaux',
        'Identifier les techniques d\'attaque sp√©cifiques au secteur',
        '√âvaluer la fr√©quence des attaques dans le secteur sant√©'
      ]
    };

    return actions[stepId] || [
      'Analyser les √©l√©ments de cette √©tape',
      'Documenter les r√©sultats',
      'Valider avec les parties prenantes'
    ];
  }

  /**
   * üì¶ OBTENIR LES LIVRABLES D'UNE √âTAPE
   */
  private getStepDeliverables(stepId: string): string[] {
    const deliverables: Record<string, string[]> = {
      'step_1_1_1': ['Document de cadrage', 'P√©rim√®tre valid√©', 'Matrice des responsabilit√©s'],
      'step_1_2_1': ['Cartographie des biens supports', 'Inventaire d√©taill√©', 'Matrice de criticit√©'],
      'step_1_3_1': ['√âchelle de disponibilit√©', 'Matrice DICS', 'Crit√®res de criticit√©'],
      'step_2_1_1': ['Catalogue des menaces', 'Profils d\'attaquants', 'Matrice de capacit√©s']
    };

    return deliverables[stepId] || ['Documentation de l\'√©tape', 'Validation des r√©sultats'];
  }

  /**
   * ‚ö° OBTENIR LA PREMI√àRE ACTION D'UNE √âTAPE
   */
  private getStepFirstAction(stepId: string): string {
    const firstActions: Record<string, string> = {
      'step_1_1_1': 'Commen√ßons par d√©finir le p√©rim√®tre d\'analyse',
      'step_1_2_1': 'Identifions les biens supports primaires du CHU',
      'step_1_3_1': '√âvaluons les besoins de disponibilit√©',
      'step_2_1_1': 'Analysons les cybercriminels ciblant les h√¥pitaux'
    };

    return firstActions[stepId] || 'D√©marrons cette √©tape ensemble';
  }

  /**
   * üéØ IDENTIFIER LE BESOIN SP√âCIFIQUE DE L'APPRENANT
   */
  private identifySpecificLearnerNeed(message: string, workshop: number, currentStep: any): string {
    const lowerMessage = message.toLowerCase();

    // Besoins sp√©cifiques par type de message
    if (lowerMessage.includes('exemple') || lowerMessage.includes('concret')) {
      return 'practical_example';
    }
    if (lowerMessage.includes('aide') || lowerMessage.includes('perdu') || lowerMessage.includes('difficile')) {
      return 'detailed_help';
    }
    if (lowerMessage.includes('validation') || lowerMessage.includes('correct') || lowerMessage.includes('juste')) {
      return 'validation';
    }
    if (lowerMessage.includes('suivant') || lowerMessage.includes('continuer') || lowerMessage.includes('apr√®s')) {
      return 'progression';
    }
    if (lowerMessage.includes('comment') || lowerMessage.includes('pourquoi')) {
      return 'conceptual_understanding';
    }

    return 'general_guidance';
  }

  /**
   * üì° D√âTECTER LES SIGNAUX DE PROGRESSION
   */
  private detectProgressionSignal(message: string, currentStep: any): string {
    const lowerMessage = message.toLowerCase();
    const completion = currentStep.completion || 0;

    // Signaux de progression
    if (lowerMessage.includes('termin√©') || lowerMessage.includes('fini') || lowerMessage.includes('valid√©')) {
      return 'ready_next_step';
    }
    if (lowerMessage.includes('difficile') || lowerMessage.includes('compliqu√©') || lowerMessage.includes('perdu')) {
      return 'struggling';
    }
    if (lowerMessage.includes('suivant') || lowerMessage.includes('continuer')) {
      return completion >= 70 ? 'ready_next_step' : 'premature_advancement';
    }
    if (lowerMessage.includes('recommencer') || lowerMessage.includes('reprendre')) {
      return 'restart_step';
    }

    return 'continuing_current';
  }

  /**
   * üèóÔ∏è OBTENIR LE CONTENU STRUCTUR√â POUR UNE ACTION
   */
  private getStructuredContentForAction(actionType: string, step: any, workshop: number): any {
    return {
      actionType,
      step,
      workshop,
      template: this.getContentTemplate(actionType),
      variables: this.getContentVariables(step, workshop)
    };
  }

  /**
   * üìù OBTENIR LE TEMPLATE DE CONTENU
   */
  private getContentTemplate(actionType: string): string {
    const templates: Record<string, string> = {
      'initialize_workshop': 'üéì **Initialisation {workshopTitle}**\n\n**Objectif :** {stepObjective}\n\n**Actions √† r√©aliser :**\n{stepActions}\n\n**Livrables attendus :**\n{stepDeliverables}',
      'advance_to_next_step': '‚û°Ô∏è **Progression vers : {stepTitle}**\n\n**F√©licitations !** Vous avez termin√© l\'√©tape pr√©c√©dente.\n\n**Prochaine √©tape :** {stepObjective}\n\n**Actions :**\n{stepActions}',
      'provide_detailed_help': 'üí° **Aide d√©taill√©e - {stepTitle}**\n\n**Objectif :** {stepObjective}\n\n**D√©marche recommand√©e :**\n{stepActions}\n\n**Conseils pratiques :**\n{practicalTips}',
      'provide_practical_example': 'üìã **Exemple pratique - {stepTitle}**\n\n**Contexte CHU :**\n{chuExample}\n\n**Application concr√®te :**\n{practicalApplication}',
      'validate_understanding': '‚úÖ **Validation - {stepTitle}**\n\n**V√©rification des acquis :**\n{validationQuestions}\n\n**Crit√®res de r√©ussite :**\n{successCriteria}'
    };

    return templates[actionType] || templates['guide_current_step'];
  }

  /**
   * üîß OBTENIR LES VARIABLES DE CONTENU
   */
  private getContentVariables(step: any, workshop: number): Record<string, string> {
    return {
      workshopTitle: `Atelier ${workshop}`,
      stepTitle: step.title,
      stepObjective: step.objective,
      stepActions: step.actions?.join('\n‚Ä¢ ') || '',
      stepDeliverables: step.deliverables?.join('\n‚Ä¢ ') || '',
      practicalTips: this.getPracticalTips(step.id),
      chuExample: this.getCHUExample(step.id),
      practicalApplication: this.getPracticalApplication(step.id),
      validationQuestions: this.getValidationQuestions(step.id),
      successCriteria: this.getSuccessCriteria(step.id)
    };
  }

  /**
   * üí° OBTENIR LES CONSEILS PRATIQUES
   */
  private getPracticalTips(stepId: string): string {
    const tips: Record<string, string> = {
      'step_1_1_1': '‚Ä¢ Impliquez les directions m√©tier d√®s le d√©but\n‚Ä¢ Documentez les exclusions avec justification\n‚Ä¢ Validez le p√©rim√®tre avec la direction',
      'step_1_2_1': '‚Ä¢ Commencez par les syst√®mes les plus critiques\n‚Ä¢ N\'oubliez pas les √©quipements m√©dicaux connect√©s\n‚Ä¢ Pensez aux sauvegardes et syst√®mes de secours'
    };

    return tips[stepId] || '‚Ä¢ Proc√©dez m√©thodiquement\n‚Ä¢ Documentez chaque d√©cision\n‚Ä¢ Validez avec les experts m√©tier';
  }

  /**
   * üè• OBTENIR L'EXEMPLE CHU
   */
  private getCHUExample(stepId: string): string {
    const examples: Record<string, string> = {
      'step_1_1_1': 'Le CHU M√©tropolitain d√©finit son p√©rim√®tre : 3 sites hospitaliers, 1200 lits, services d\'urgence, blocs op√©ratoires, et laboratoires.',
      'step_1_2_1': 'Biens supports primaires identifi√©s : SIH (DxCare), PACS d\'imagerie, syst√®mes de surveillance patient, r√©seau backbone.'
    };

    return examples[stepId] || 'Exemple sp√©cifique au CHU M√©tropolitain pour cette √©tape.';
  }

  /**
   * üîß OBTENIR L'APPLICATION PRATIQUE
   */
  private getPracticalApplication(stepId: string): string {
    const applications: Record<string, string> = {
      'step_1_1_1': 'Cr√©ez un document de cadrage avec : p√©rim√®tre g√©ographique, syst√®mes inclus/exclus, parties prenantes, objectifs de s√©curit√©.',
      'step_1_2_1': 'Utilisez la matrice de criticit√© ANSSI pour classer vos biens supports selon leur importance pour la continuit√© des soins.'
    };

    return applications[stepId] || 'Application pratique de cette √©tape dans votre contexte.';
  }

  /**
   * ‚ùì OBTENIR LES QUESTIONS DE VALIDATION
   */
  private getValidationQuestions(stepId: string): string {
    const questions: Record<string, string> = {
      'step_1_1_1': '‚Ä¢ Le p√©rim√®tre est-il clairement d√©fini ?\n‚Ä¢ Les parties prenantes sont-elles identifi√©es ?\n‚Ä¢ Les objectifs sont-ils mesurables ?',
      'step_1_2_1': '‚Ä¢ Tous les biens supports critiques sont-ils identifi√©s ?\n‚Ä¢ Les interd√©pendances sont-elles document√©es ?\n‚Ä¢ La criticit√© est-elle √©valu√©e ?'
    };

    return questions[stepId] || '‚Ä¢ L\'√©tape est-elle compl√®te ?\n‚Ä¢ Les livrables sont-ils produits ?\n‚Ä¢ La validation est-elle effectu√©e ?';
  }

  /**
   * ‚úÖ OBTENIR LES CRIT√àRES DE SUCC√àS
   */
  private getSuccessCriteria(stepId: string): string {
    const criteria: Record<string, string> = {
      'step_1_1_1': '‚Ä¢ Document de cadrage valid√© par la direction\n‚Ä¢ P√©rim√®tre approuv√© par toutes les parties prenantes\n‚Ä¢ Objectifs SMART d√©finis',
      'step_1_2_1': '‚Ä¢ Cartographie compl√®te des biens supports\n‚Ä¢ Matrice de criticit√© renseign√©e\n‚Ä¢ Validation par les responsables m√©tier'
    };

    return criteria[stepId] || '‚Ä¢ Livrables produits et valid√©s\n‚Ä¢ Objectifs de l\'√©tape atteints\n‚Ä¢ Pr√™t pour l\'√©tape suivante';
  }

  // ========================================
  // üèóÔ∏è G√âN√âRATEURS DE CONTENU STRUCTUR√â
  // ========================================

  /**
   * üöÄ G√âN√âRATION D'INITIALISATION DE WORKSHOP
   */
  private generateWorkshopInitialization(workshop: number, step: any, context: any): any {
    const template = this.getContentTemplate('initialize_workshop');
    const variables = this.getContentVariables(step, workshop);

    const content = this.replaceTemplateVariables(template, variables);

    return {
      content: `${content}\n\n**üè• Contexte CHU M√©tropolitain :**\n${this.getCHUExample(step.id)}\n\n**üéØ Commen√ßons ensemble :**\n${step.actions[0]}`,
      type: 'action_suggestions',
      confidence: 0.95,
      sources: ['M√©thodologie EBIOS RM', 'Guide ANSSI'],
      quiz: null,
      infoCard: {
        title: `Guide ${step.title}`,
        content: step.objective,
        resources: [`Guide EBIOS RM - Atelier ${workshop}`, 'R√©f√©rentiel ANSSI']
      }
    };
  }

  /**
   * ‚û°Ô∏è G√âN√âRATION D'AVANCEMENT D'√âTAPE
   */
  private generateStepAdvancement(step: any, workshop: number, context: any): any {
    const template = this.getContentTemplate('advance_to_next_step');
    const variables = this.getContentVariables(step, workshop);

    const content = this.replaceTemplateVariables(template, variables);

    return {
      content: `${content}\n\n**üè• Application CHU :**\n${this.getCHUExample(step.id)}\n\n**üîß Actions pratiques :**\n${this.getPracticalApplication(step.id)}`,
      type: 'text',
      confidence: 0.9,
      sources: ['Progression EBIOS RM'],
      quiz: this.generateStepQuiz(step),
      infoCard: null
    };
  }

  /**
   * üí° G√âN√âRATION D'AIDE D√âTAILL√âE
   */
  private generateDetailedHelp(step: any, workshop: number, context: any): any {
    const template = this.getContentTemplate('provide_detailed_help');
    const variables = this.getContentVariables(step, workshop);

    const content = this.replaceTemplateVariables(template, variables);

    return {
      content: `${content}\n\n**üéØ D√©marche pas √† pas :**\n${step.actions.map((action: string, index: number) => `**${index + 1}.** ${action}`).join('\n\n')}\n\n**‚ùì Questions pour vous guider :**\n${this.getGuidingQuestions(step.id)}`,
      type: 'text',
      confidence: 0.85,
      sources: ['Aide m√©thodologique EBIOS RM'],
      quiz: null,
      infoCard: {
        title: 'üí° Conseils d\'expert',
        content: this.getPracticalTips(step.id),
        resources: ['Guide m√©thodologique', 'Bonnes pratiques']
      }
    };
  }

  /**
   * üìã G√âN√âRATION D'EXEMPLE PRATIQUE
   */
  private generatePracticalExample(step: any, workshop: number, context: any): any {
    const template = this.getContentTemplate('provide_practical_example');
    const variables = this.getContentVariables(step, workshop);

    const content = this.replaceTemplateVariables(template, variables);

    return {
      content: `${content}\n\n**üìä R√©sultat attendu :**\n${step.deliverables.map((deliverable: string) => `‚Ä¢ ${deliverable}`).join('\n')}\n\n**‚úÖ Crit√®res de validation :**\n${this.getSuccessCriteria(step.id)}`,
      type: 'info_card',
      confidence: 0.9,
      sources: ['Exemples secteur sant√©', 'Cas d\'usage CHU'],
      quiz: null,
      infoCard: {
        title: `Exemple concret - ${step.title}`,
        content: this.getCHUExample(step.id),
        resources: ['Cas d\'usage sectoriels', 'Templates ANSSI']
      }
    };
  }

  /**
   * ‚úÖ G√âN√âRATION DE CONTENU DE VALIDATION
   */
  private generateValidationContent(step: any, workshop: number, context: any): any {
    const template = this.getContentTemplate('validate_understanding');
    const variables = this.getContentVariables(step, workshop);

    const content = this.replaceTemplateVariables(template, variables);

    return {
      content: `${content}\n\n**üéØ Auto-√©valuation :**\nR√©pondez √† ces questions pour valider votre compr√©hension.`,
      type: 'quiz',
      confidence: 0.95,
      sources: ['Validation EBIOS RM'],
      quiz: this.generateValidationQuiz(step),
      infoCard: null
    };
  }

  /**
   * üß≠ G√âN√âRATION DE GUIDAGE D'√âTAPE
   */
  private generateStepGuidance(step: any, workshop: number, context: any): any {
    return {
      content: `üéØ **${step.title}**\n\n**Objectif :** ${step.objective}\n\n**üîß Actions √† r√©aliser :**\n${step.actions.map((action: string, index: number) => `${index + 1}. ${action}`).join('\n')}\n\n**üè• Dans le contexte du CHU :**\n${this.getCHUExample(step.id)}\n\n**üí° Conseils :**\n${this.getPracticalTips(step.id)}`,
      type: 'text',
      confidence: 0.8,
      sources: ['Guidage EBIOS RM'],
      quiz: null,
      infoCard: {
        title: `Aide - ${step.title}`,
        content: step.objective,
        resources: ['Guide m√©thodologique', 'Exemples pratiques']
      }
    };
  }

  /**
   * üîÑ REMPLACER LES VARIABLES DANS LE TEMPLATE
   */
  private replaceTemplateVariables(template: string, variables: Record<string, string>): string {
    let content = template;

    Object.entries(variables).forEach(([key, value]) => {
      const regex = new RegExp(`{${key}}`, 'g');
      content = content.replace(regex, value);
    });

    return content;
  }

  /**
   * üß† G√âN√âRER UN QUIZ D'√âTAPE
   */
  private generateStepQuiz(step: any): any {
    const quizzes: Record<string, any> = {
      'step_1_1_1': {
        question: 'Quel est l\'√©l√©ment le plus important lors du cadrage d\'une analyse EBIOS RM ?',
        options: [
          'La d√©finition pr√©cise du p√©rim√®tre',
          'Le choix des outils techniques',
          'La planification des r√©unions',
          'La r√©daction du rapport final'
        ],
        correctAnswer: 0,
        explanation: 'La d√©finition pr√©cise du p√©rim√®tre est cruciale car elle d√©termine la port√©e et la pertinence de toute l\'analyse de risques.'
      },
      'step_1_2_1': {
        question: 'Dans un CHU, quel bien support est g√©n√©ralement consid√©r√© comme le plus critique ?',
        options: [
          'Le syst√®me de climatisation',
          'Le SIH (Syst√®me d\'Information Hospitalier)',
          'Le r√©seau WiFi visiteurs',
          'Le syst√®me de sonorisation'
        ],
        correctAnswer: 1,
        explanation: 'Le SIH est critique car il contient toutes les donn√©es patients et est essentiel pour la continuit√© des soins.'
      }
    };

    return quizzes[step.id] || null;
  }

  /**
   * ‚úÖ G√âN√âRER UN QUIZ DE VALIDATION
   */
  private generateValidationQuiz(step: any): any {
    return {
      question: `Avez-vous bien compris les objectifs de l'√©tape "${step.title}" ?`,
      options: [
        'Oui, je peux expliquer l\'objectif et les actions',
        'Partiellement, j\'ai besoin de clarifications',
        'Non, je dois revoir cette √©tape',
        'Je pr√©f√®re passer √† l\'√©tape suivante'
      ],
      correctAnswer: 0,
      explanation: 'Une compr√©hension compl√®te est n√©cessaire avant de progresser vers l\'√©tape suivante.'
    };
  }

  /**
   * ‚ùì OBTENIR LES QUESTIONS GUIDANTES
   */
  private getGuidingQuestions(stepId: string): string {
    const questions: Record<string, string> = {
      'step_1_1_1': '‚Ä¢ Quels sont les enjeux m√©tier de votre organisation ?\n‚Ä¢ Quelles sont les contraintes r√©glementaires ?\n‚Ä¢ Qui sont les parties prenantes cl√©s ?',
      'step_1_2_1': '‚Ä¢ Quels syst√®mes sont essentiels √† votre activit√© ?\n‚Ä¢ Quelles sont les interd√©pendances critiques ?\n‚Ä¢ Comment √©valuez-vous la criticit√© ?'
    };

    return questions[stepId] || '‚Ä¢ Quels sont les √©l√©ments cl√©s de cette √©tape ?\n‚Ä¢ Comment les appliquer √† votre contexte ?\n‚Ä¢ Quels sont les livrables attendus ?';
  }

  /**
   * üèóÔ∏è OBTENIR LA PREMI√àRE √âTAPE D'UN WORKSHOP
   */
  private getWorkshopFirstStep(workshop: number): any {
    const structure = this.getWorkshopDetailedStructure(workshop);
    const firstStep = structure.phases[0].steps[0];

    return {
      ...firstStep,
      phase: structure.phases[0].title,
      phaseId: structure.phases[0].id,
      stepIndex: 0,
      completion: 0,
      objective: this.getStepObjective(firstStep.id),
      actions: this.getStepActions(firstStep.id),
      deliverables: this.getStepDeliverables(firstStep.id)
    };
  }

  // üîÑ SYST√àME ANTI-BOUCLE - M√âTHODES

  /**
   * üîç D√©tection de boucles dans la conversation
   */
  private isLoopDetected(message: string): boolean {
    const sessionId = this.currentSession?.id || 'default';

    // Ajouter le message √† l'historique
    if (!this.conversationHistory.has(sessionId)) {
      this.conversationHistory.set(sessionId, []);
    }

    const history = this.conversationHistory.get(sessionId)!;

    // V√©rifier si le message exact a √©t√© r√©p√©t√© r√©cemment
    const recentMessages = history.slice(-5); // 5 derniers messages
    const exactMatches = recentMessages.filter(msg => msg.toLowerCase().trim() === message.toLowerCase().trim()).length;

    if (exactMatches >= 2) {
      return true;
    }

    // V√©rifier les patterns de r√©ponse similaires
    const messageKey = this.normalizeMessage(message);
    const patternCount = this.responsePatterns.get(messageKey) || 0;
    this.responsePatterns.set(messageKey, patternCount + 1);

    return patternCount >= 3; // Seuil de d√©tection de boucle
  }

  /**
   * üìù Enregistrer une interaction pour le syst√®me anti-boucle
   */
  private recordInteraction(userMessage: string, agentResponse: string): void {
    const sessionId = this.currentSession?.id || 'default';

    // Enregistrer dans l'historique
    if (!this.conversationHistory.has(sessionId)) {
      this.conversationHistory.set(sessionId, []);
    }

    const history = this.conversationHistory.get(sessionId)!;
    history.push(userMessage);

    // Limiter la taille de l'historique
    if (history.length > 50) {
      history.splice(0, 10); // Supprimer les 10 plus anciens
    }

    // Enregistrer les derni√®res r√©ponses
    this.lastResponses.push(agentResponse);
    if (this.lastResponses.length > 10) {
      this.lastResponses.shift();
    }

    // Analyser l'intention pour √©viter les r√©p√©titions
    const intent = this._analyzeMessageIntent(userMessage);
    this.userIntentHistory.push(intent.type);
    if (this.userIntentHistory.length > 20) {
      this.userIntentHistory.shift();
    }
  }

  /**
   * üîÑ G√©n√©rer une r√©ponse anti-boucle
   */
  private generateAntiLoopResponse(message: string): AgentResponseData {
    const alternatives = [
      "Je remarque que nous tournons en rond. Essayons une approche diff√©rente !",
      "Il semble que nous ayons d√©j√† abord√© ce point. Permettez-moi de vous orienter autrement.",
      "Pour √©viter de r√©p√©ter, laissez-moi vous proposer une nouvelle perspective.",
      "Je sens que vous cherchez quelque chose de sp√©cifique. Pouvez-vous reformuler votre besoin ?",
      "Changeons d'angle ! Quelle est votre pr√©occupation principale en ce moment ?"
    ];

    const randomResponse = alternatives[Math.floor(Math.random() * alternatives.length)];

    return {
      text: `üîÑ ${randomResponse}

**Suggestions pour avancer :**
‚Ä¢ Posez une question plus sp√©cifique
‚Ä¢ Demandez un exemple concret
‚Ä¢ Passez √† l'√©tape suivante
‚Ä¢ Explorez un autre aspect du sujet`,
      type: 'action_suggestions',
      actions: [
        { id: 'specific', label: '‚ùì Question sp√©cifique', payload: 'J\'ai une question sp√©cifique sur...', type: 'primary', icon: '‚ùì' },
        { id: 'example', label: 'üí° Exemple concret', payload: 'Montrez-moi un exemple concret', type: 'info', icon: 'üí°' },
        { id: 'next', label: '‚û°Ô∏è √âtape suivante', payload: 'Passons √† l\'√©tape suivante', type: 'success', icon: '‚û°Ô∏è' },
        { id: 'help', label: 'üÜò Aide personnalis√©e', payload: 'J\'ai besoin d\'aide personnalis√©e', type: 'warning', icon: 'üÜò' }
      ],
      metadata: {
        confidence: 0.8,
        sources: ['Anti-Loop System'],
        timestamp: new Date(),
        fallbackUsed: true
      }
    };
  }

  /**
   * üîß Normaliser un message pour la d√©tection de patterns
   */
  private normalizeMessage(message: string): string {
    return message
      .toLowerCase()
      .replace(/[^\w\s]/g, '') // Supprimer la ponctuation
      .replace(/\s+/g, ' ') // Normaliser les espaces
      .trim()
      .substring(0, 50); // Limiter la longueur
  }
}
