#!/bin/bash

# üöÄ SCRIPT DE D√âMARRAGE AVEC WORKSHOP 1
# D√©marrage optimis√© pour tester le nouveau module Workshop 1

set -e

# üéØ CONFIGURATION
PORT=5173
HOST=localhost
WORKSHOP1_URL="http://${HOST}:${PORT}/training/workshop1"

# Couleurs pour les logs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}üöÄ D√âMARRAGE EBIOS AI MANAGER AVEC WORKSHOP 1${NC}"
echo "=================================================="
echo ""

# üîß Configuration des variables d'environnement
echo -e "${YELLOW}‚öôÔ∏è Configuration de l'environnement...${NC}"

cat > .env.local << EOF
# Configuration Workshop 1 - D√©veloppement
NODE_ENV=development
VITE_NODE_ENV=development

# Workshop 1 Features
VITE_WORKSHOP1_ENABLE_MONITORING=true
VITE_WORKSHOP1_ENABLE_A2A=true
VITE_WORKSHOP1_ENABLE_EXPERT_NOTIFICATIONS=true
VITE_WORKSHOP1_ENABLE_PERFORMANCE_TRACKING=true
VITE_WORKSHOP1_ENABLE_ERROR_REPORTING=true

# Workshop 1 Limits
VITE_WORKSHOP1_MAX_CONCURRENT_SESSIONS=10
VITE_WORKSHOP1_SESSION_TIMEOUT_MS=1800000
VITE_WORKSHOP1_NOTIFICATION_RETENTION_DAYS=7
VITE_WORKSHOP1_METRICS_RETENTION_DAYS=30

# Workshop 1 Logging
VITE_WORKSHOP1_LOG_LEVEL=debug

# Firebase Configuration
VITE_FIREBASE_PROJECT_ID=ebiosdatabase
VITE_FIREBASE_API_KEY=AIzaSyCN4GaNMnshiDw0Z0dgGnhmgbokVyd7LmA
VITE_FIREBASE_AUTH_DOMAIN=ebiosdatabase.firebaseapp.com
VITE_FIREBASE_STORAGE_BUCKET=ebiosdatabase.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=123456789
VITE_FIREBASE_APP_ID=1:123456789:web:abcdef123456789

# Training Module
VITE_TRAINING_MODULE_ENABLED=true

# Development Features
VITE_ENABLE_DEV_TOOLS=true
VITE_ENABLE_REACT_DEVTOOLS=true
VITE_ENABLE_REDUX_DEVTOOLS=true
EOF

echo -e "${GREEN}‚úÖ Variables d'environnement configur√©es${NC}"

# üì¶ Installation des d√©pendances si n√©cessaire
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installation des d√©pendances...${NC}"
    npm install
    echo -e "${GREEN}‚úÖ D√©pendances install√©es${NC}"
fi

echo ""
echo -e "${BLUE}üìã INFORMATIONS WORKSHOP 1${NC}"
echo "================================"
echo ""
echo -e "${GREEN}üéØ URLs de test:${NC}"
echo "   ‚Ä¢ Application: http://${HOST}:${PORT}"
echo "   ‚Ä¢ Formation: http://${HOST}:${PORT}/training"
echo "   ‚Ä¢ Workshop 1: ${WORKSHOP1_URL}"
echo ""
echo -e "${GREEN}üß™ Fonctionnalit√©s √† tester:${NC}"
echo "   ‚Ä¢ Agent Orchestrateur Intelligent (Point 1)"
echo "   ‚Ä¢ Syst√®me de Notifications A2A (Point 2)"
echo "   ‚Ä¢ Interface React Intelligente (Point 3)"
echo "   ‚Ä¢ Tests et Validation (Point 4)"
echo "   ‚Ä¢ Int√©gration Production (Point 5)"
echo ""
echo -e "${GREEN}üë§ Profils de test disponibles:${NC}"
echo "   ‚Ä¢ Junior EBIOS RM (apprentissage guid√©)"
echo "   ‚Ä¢ Senior EBIOS RM (interface √©quilibr√©e)"
echo "   ‚Ä¢ Expert EBIOS RM (fonctionnalit√©s compl√®tes)"
echo "   ‚Ä¢ Master EBIOS RM (collaboration A2A)"
echo ""
echo -e "${GREEN}üîß Commandes utiles:${NC}"
echo "   ‚Ä¢ Ctrl+C : Arr√™ter le serveur"
echo "   ‚Ä¢ F12 : Ouvrir les outils de d√©veloppement"
echo "   ‚Ä¢ Ctrl+Shift+I : Inspecter les composants React"
echo ""

# üöÄ D√©marrage du serveur
echo -e "${BLUE}üöÄ D√©marrage du serveur de d√©veloppement...${NC}"
echo ""

# D√©marrage en arri√®re-plan pour pouvoir afficher les instructions
npm run dev &
DEV_PID=$!

# Attendre que le serveur d√©marre
echo -e "${YELLOW}‚è≥ D√©marrage en cours...${NC}"
sleep 5

# V√©rifier si le serveur est d√©marr√©
if curl -s "http://${HOST}:${PORT}" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Serveur d√©marr√© avec succ√®s !${NC}"
    echo ""
    echo -e "${BLUE}üéØ ACC√àS DIRECT AU WORKSHOP 1:${NC}"
    echo -e "${GREEN}${WORKSHOP1_URL}${NC}"
    echo ""
    echo -e "${YELLOW}üìù Instructions pour tester:${NC}"
    echo ""
    echo "1. üåê Ouvrez votre navigateur sur: ${WORKSHOP1_URL}"
    echo "2. üîê Connectez-vous avec vos identifiants"
    echo "3. üë§ Configurez votre profil d'expertise"
    echo "4. üéØ Testez l'adaptation intelligente de l'interface"
    echo "5. ü§ñ Interagissez avec l'agent orchestrateur"
    echo "6. üîî Testez les notifications expertes A2A"
    echo "7. üìä V√©rifiez les m√©triques et le monitoring"
    echo ""
    echo -e "${BLUE}üîç Logs de d√©veloppement:${NC}"
    echo "   ‚Ä¢ Console navigateur : Logs d√©taill√©s du Workshop 1"
    echo "   ‚Ä¢ Redux DevTools : √âtat de l'application"
    echo "   ‚Ä¢ React DevTools : Composants et props"
    echo "   ‚Ä¢ Network : Requ√™tes API et Firebase"
    echo ""
    
    # Ouvrir automatiquement le navigateur (optionnel)
    if command -v xdg-open > /dev/null; then
        echo -e "${YELLOW}üåê Ouverture automatique du navigateur...${NC}"
        xdg-open "${WORKSHOP1_URL}" 2>/dev/null &
    elif command -v open > /dev/null; then
        echo -e "${YELLOW}üåê Ouverture automatique du navigateur...${NC}"
        open "${WORKSHOP1_URL}" 2>/dev/null &
    elif command -v start > /dev/null; then
        echo -e "${YELLOW}üåê Ouverture automatique du navigateur...${NC}"
        start "${WORKSHOP1_URL}" 2>/dev/null &
    fi
    
else
    echo -e "${YELLOW}‚ö†Ô∏è Le serveur d√©marre encore... Veuillez patienter${NC}"
    echo "   V√©rifiez manuellement: http://${HOST}:${PORT}"
fi

echo ""
echo -e "${GREEN}üéâ WORKSHOP 1 PR√äT POUR LES TESTS !${NC}"
echo ""
echo -e "${YELLOW}Appuyez sur Ctrl+C pour arr√™ter le serveur${NC}"

# Attendre le processus de d√©veloppement
wait $DEV_PID
